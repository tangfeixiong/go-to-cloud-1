
# https://docs.openshift.org/latest/install_config/configuring_authentication.html

oauthConfig:
  grantConfig:
    method: auto
  tokenConfig:
    accessTokenMaxAgeSeconds: 86400 
    authorizeTokenMaxAgeSeconds: 300
  sessionConfig:
    sessionMaxAgeSeconds: 300 
    sessionName: ssn 
    sessionSecretsFile: "..."
  identityProviders:
  - name: htpasswd_auth
    challenge: true
    login: false
    mappingMethod: "claim"
	provider:
      apiVersion: v1
      kind: HTPasswdPasswordIdentityProvider
      file: /path/to/users.htpasswd
  - name: anypassword 
    challenge: true 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: AllowAllPasswordIdentityProvider
  - name: unablepassword 
    challenge: true 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: DenyAllPasswordIdentityProvider
  - name: openstackkeystone 
    challenge: true 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: KeystonePasswordIdentityProvider
      domainName: default 
      ca: ca.pem 
      certFile: keystone.pem 
      keyFile: keystonekey.pem
  - name: "my_ldap_provider" 
    challenge: true 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: LDAPPasswordIdentityProvider
      attributes:
        id: 
        - dn
        email: 
        - mail
        name: 
        - cn
        preferredUsername: 
        - uid
      bindDN: "" 
      bindPassword: "" 
      ca: my-ldap-ca-bundle.crt 
      insecure: false 
      url: "ldap://ldap.example.com/ou=users,dc=acme,dc=com?uid"
  - name: my_remote_basic_auth_provider 
    challenge: true 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: BasicAuthPasswordIdentityProvider
      url: https://www.example.com/remote-idp 
      ca: /path/to/ca.file 
      certFile: /path/to/client.crt 
      keyFile: /path/to/client.key
  - name: my_request_header_provider 
    challenge: true 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: RequestHeaderIdentityProvider
      challengeURL: "https://www.example.com/challenging-proxy/oauth/authorize?${query}" 
      loginURL: "https://www.example.com/login-proxy/oauth/authorize?${query}" 
      clientCA: /path/to/client-ca.file 
      clientCommonNames: 
      - my-auth-proxy
      headers: 
      - X-Remote-User
      - SSO-User
      emailHeaders: 
      - X-Remote-User-Email
      nameHeaders: 
      - X-Remote-User-Display-Name
      preferredUsernameHeaders: 
      - X-Remote-User-Login
  - name: github 
    challenge: false 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: GitHubIdentityProvider
      clientID: ... 
      clientSecret: ... 
      organizations: 
      - myorganization1
      - myorganization2
  - name: gitlab 
    challenge: true 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: GitLabIdentityProvider
      url: ... 
      clientID: ... 
      clientSecret: ... 
      ca: ...
  - name: google 
    challenge: false 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: GoogleIdentityProvider
      clientID: ... 
      clientSecret: ... 
      hostedDomain: ""
  - name: my_openid_connect 
    challenge: true 
    login: true 
    mappingMethod: claim 
    provider:
      apiVersion: v1
      kind: OpenIDIdentityProvider
      clientID: ... 
      clientSecret: ... 
      claims:
        id:
        - sub 
        preferredUsername:
        - preferred_username
        name:
        - name
        email:
        - email
      urls:
        authorize: https://myidp.example.com/oauth2/authorize 
        token: https://myidp.example.com/oauth2/token
  - name: my_openid_connect1
    challenge: false
    login: true
    mappingMethod: claim
    provider:
      apiVersion: v1
      kind: OpenIDIdentityProvider
      clientID: ...
      clientSecret: ...
      ca: my-openid-ca-bundle.crt 
      extraScopes: 
      - email
      - profile
      extraAuthorizeParameters: 
        include_granted_scopes: "true"
      claims:
        id: 
        - custom_id_claim
        - sub
        preferredUsername: 
        - preferred_username
        - email
        name: 
        - nickname
        - given_name
        - name
        email: 
        - custom_email_claim
        - email
      urls:
        authorize: https://myidp.example.com/oauth2/authorize
        token: https://myidp.example.com/oauth2/token
        userInfo: https://myidp.example.com/oauth2/userinfo