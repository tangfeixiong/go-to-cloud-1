// Code generated by protoc-gen-go.
// source: paas/ci/openshift/service.proto
// DO NOT EDIT!

/*
Package openshift is a generated protocol buffer package.

It is generated from these files:
	paas/ci/openshift/service.proto

It has these top-level messages:
	EnterWorkspaceRequest
	EnterWorkspaceResponse
	LeaveWorkspaceRequest
	LeaveWorkspaceResponse
	CreateProjectRequest
	CreateProjectResponse
	LookupProjectsRequest
	LookupProjectsResponse
	OpenProjectRequest
	OpenProjectResponse
	DeleteProjectRequest
	DeleteProjectResponse
	BuildDockerImageRequest
	GitRepo
*/
package openshift

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnterWorkspaceRequest struct {
	Username    string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Credentials string `protobuf:"bytes,2,opt,name=credentials" json:"credentials,omitempty"`
}

func (m *EnterWorkspaceRequest) Reset()                    { *m = EnterWorkspaceRequest{} }
func (m *EnterWorkspaceRequest) String() string            { return proto.CompactTextString(m) }
func (*EnterWorkspaceRequest) ProtoMessage()               {}
func (*EnterWorkspaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EnterWorkspaceResponse struct {
	Identifier string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *EnterWorkspaceResponse) Reset()                    { *m = EnterWorkspaceResponse{} }
func (m *EnterWorkspaceResponse) String() string            { return proto.CompactTextString(m) }
func (*EnterWorkspaceResponse) ProtoMessage()               {}
func (*EnterWorkspaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type LeaveWorkspaceRequest struct {
	Username   string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Identifier string `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *LeaveWorkspaceRequest) Reset()                    { *m = LeaveWorkspaceRequest{} }
func (m *LeaveWorkspaceRequest) String() string            { return proto.CompactTextString(m) }
func (*LeaveWorkspaceRequest) ProtoMessage()               {}
func (*LeaveWorkspaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type LeaveWorkspaceResponse struct {
	Flag int64 `protobuf:"varint,1,opt,name=flag" json:"flag,omitempty"`
}

func (m *LeaveWorkspaceResponse) Reset()                    { *m = LeaveWorkspaceResponse{} }
func (m *LeaveWorkspaceResponse) String() string            { return proto.CompactTextString(m) }
func (*LeaveWorkspaceResponse) ProtoMessage()               {}
func (*LeaveWorkspaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CreateProjectRequest struct {
	Identifier  string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	ProjectID   string `protobuf:"bytes,2,opt,name=projectID" json:"projectID,omitempty"`
	ProjectName string `protobuf:"bytes,3,opt,name=projectName" json:"projectName,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *CreateProjectRequest) Reset()                    { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()               {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type CreateProjectResponse struct {
	ApiVersion  string `protobuf:"bytes,1,opt,name=apiVersion" json:"apiVersion,omitempty"`
	Kind        string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	ProjectJSON []byte `protobuf:"bytes,3,opt,name=projectJSON,proto3" json:"projectJSON,omitempty"`
}

func (m *CreateProjectResponse) Reset()                    { *m = CreateProjectResponse{} }
func (m *CreateProjectResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProjectResponse) ProtoMessage()               {}
func (*CreateProjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type LookupProjectsRequest struct {
	Identifier string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *LookupProjectsRequest) Reset()                    { *m = LookupProjectsRequest{} }
func (m *LookupProjectsRequest) String() string            { return proto.CompactTextString(m) }
func (*LookupProjectsRequest) ProtoMessage()               {}
func (*LookupProjectsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type LookupProjectsResponse struct {
	ApiVersion   string `protobuf:"bytes,1,opt,name=apiVersion" json:"apiVersion,omitempty"`
	Kind         string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	ProjectsJSON []byte `protobuf:"bytes,3,opt,name=projectsJSON,proto3" json:"projectsJSON,omitempty"`
}

func (m *LookupProjectsResponse) Reset()                    { *m = LookupProjectsResponse{} }
func (m *LookupProjectsResponse) String() string            { return proto.CompactTextString(m) }
func (*LookupProjectsResponse) ProtoMessage()               {}
func (*LookupProjectsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type OpenProjectRequest struct {
	Identifier string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	ProjectID  string `protobuf:"bytes,2,opt,name=projectID" json:"projectID,omitempty"`
}

func (m *OpenProjectRequest) Reset()                    { *m = OpenProjectRequest{} }
func (m *OpenProjectRequest) String() string            { return proto.CompactTextString(m) }
func (*OpenProjectRequest) ProtoMessage()               {}
func (*OpenProjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type OpenProjectResponse struct {
	ApiVersion  string `protobuf:"bytes,1,opt,name=apiVersion" json:"apiVersion,omitempty"`
	Kind        string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	ProjectJSON []byte `protobuf:"bytes,3,opt,name=projectJSON,proto3" json:"projectJSON,omitempty"`
}

func (m *OpenProjectResponse) Reset()                    { *m = OpenProjectResponse{} }
func (m *OpenProjectResponse) String() string            { return proto.CompactTextString(m) }
func (*OpenProjectResponse) ProtoMessage()               {}
func (*OpenProjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type DeleteProjectRequest struct {
	Identifier string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	ProjectID  string `protobuf:"bytes,2,opt,name=projectID" json:"projectID,omitempty"`
}

func (m *DeleteProjectRequest) Reset()                    { *m = DeleteProjectRequest{} }
func (m *DeleteProjectRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteProjectRequest) ProtoMessage()               {}
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type DeleteProjectResponse struct {
	Flag int64 `protobuf:"varint,1,opt,name=flag" json:"flag,omitempty"`
}

func (m *DeleteProjectResponse) Reset()                    { *m = DeleteProjectResponse{} }
func (m *DeleteProjectResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteProjectResponse) ProtoMessage()               {}
func (*DeleteProjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type BuildDockerImageRequest struct {
	DockerfileContent string `protobuf:"bytes,1,opt,name=dockerfileContent" json:"dockerfileContent,omitempty"`
	ContextArchive    string `protobuf:"bytes,2,opt,name=contextArchive" json:"contextArchive,omitempty"`
	Gitrepo           string `protobuf:"bytes,3,opt,name=gitrepo" json:"gitrepo,omitempty"`
	BinaryStream      string `protobuf:"bytes,4,opt,name=binaryStream" json:"binaryStream,omitempty"`
}

func (m *BuildDockerImageRequest) Reset()                    { *m = BuildDockerImageRequest{} }
func (m *BuildDockerImageRequest) String() string            { return proto.CompactTextString(m) }
func (*BuildDockerImageRequest) ProtoMessage()               {}
func (*BuildDockerImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type GitRepo struct {
	Site        string `protobuf:"bytes,1,opt,name=site" json:"site,omitempty"`
	Uri         string `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
	Ref         string `protobuf:"bytes,3,opt,name=ref" json:"ref,omitempty"`
	ContextPath string `protobuf:"bytes,4,opt,name=contextPath" json:"contextPath,omitempty"`
	DockerFile  string `protobuf:"bytes,5,opt,name=dockerFile" json:"dockerFile,omitempty"`
}

func (m *GitRepo) Reset()                    { *m = GitRepo{} }
func (m *GitRepo) String() string            { return proto.CompactTextString(m) }
func (*GitRepo) ProtoMessage()               {}
func (*GitRepo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func init() {
	proto.RegisterType((*EnterWorkspaceRequest)(nil), "paas.ci.openshift.EnterWorkspaceRequest")
	proto.RegisterType((*EnterWorkspaceResponse)(nil), "paas.ci.openshift.EnterWorkspaceResponse")
	proto.RegisterType((*LeaveWorkspaceRequest)(nil), "paas.ci.openshift.LeaveWorkspaceRequest")
	proto.RegisterType((*LeaveWorkspaceResponse)(nil), "paas.ci.openshift.LeaveWorkspaceResponse")
	proto.RegisterType((*CreateProjectRequest)(nil), "paas.ci.openshift.CreateProjectRequest")
	proto.RegisterType((*CreateProjectResponse)(nil), "paas.ci.openshift.CreateProjectResponse")
	proto.RegisterType((*LookupProjectsRequest)(nil), "paas.ci.openshift.LookupProjectsRequest")
	proto.RegisterType((*LookupProjectsResponse)(nil), "paas.ci.openshift.LookupProjectsResponse")
	proto.RegisterType((*OpenProjectRequest)(nil), "paas.ci.openshift.OpenProjectRequest")
	proto.RegisterType((*OpenProjectResponse)(nil), "paas.ci.openshift.OpenProjectResponse")
	proto.RegisterType((*DeleteProjectRequest)(nil), "paas.ci.openshift.DeleteProjectRequest")
	proto.RegisterType((*DeleteProjectResponse)(nil), "paas.ci.openshift.DeleteProjectResponse")
	proto.RegisterType((*BuildDockerImageRequest)(nil), "paas.ci.openshift.BuildDockerImageRequest")
	proto.RegisterType((*GitRepo)(nil), "paas.ci.openshift.GitRepo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for SimpleService service

type SimpleServiceClient interface {
	EnterWorkspace(ctx context.Context, in *EnterWorkspaceRequest, opts ...grpc.CallOption) (*EnterWorkspaceResponse, error)
	LeaveWorkspace(ctx context.Context, in *LeaveWorkspaceRequest, opts ...grpc.CallOption) (*LeaveWorkspaceResponse, error)
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	LookupProjects(ctx context.Context, in *LookupProjectsRequest, opts ...grpc.CallOption) (*LookupProjectsResponse, error)
	OpenProject(ctx context.Context, in *OpenProjectRequest, opts ...grpc.CallOption) (*OpenProjectResponse, error)
	DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*DeleteProjectResponse, error)
}

type simpleServiceClient struct {
	cc *grpc.ClientConn
}

func NewSimpleServiceClient(cc *grpc.ClientConn) SimpleServiceClient {
	return &simpleServiceClient{cc}
}

func (c *simpleServiceClient) EnterWorkspace(ctx context.Context, in *EnterWorkspaceRequest, opts ...grpc.CallOption) (*EnterWorkspaceResponse, error) {
	out := new(EnterWorkspaceResponse)
	err := grpc.Invoke(ctx, "/paas.ci.openshift.SimpleService/EnterWorkspace", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simpleServiceClient) LeaveWorkspace(ctx context.Context, in *LeaveWorkspaceRequest, opts ...grpc.CallOption) (*LeaveWorkspaceResponse, error) {
	out := new(LeaveWorkspaceResponse)
	err := grpc.Invoke(ctx, "/paas.ci.openshift.SimpleService/LeaveWorkspace", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simpleServiceClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	out := new(CreateProjectResponse)
	err := grpc.Invoke(ctx, "/paas.ci.openshift.SimpleService/CreateProject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simpleServiceClient) LookupProjects(ctx context.Context, in *LookupProjectsRequest, opts ...grpc.CallOption) (*LookupProjectsResponse, error) {
	out := new(LookupProjectsResponse)
	err := grpc.Invoke(ctx, "/paas.ci.openshift.SimpleService/LookupProjects", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simpleServiceClient) OpenProject(ctx context.Context, in *OpenProjectRequest, opts ...grpc.CallOption) (*OpenProjectResponse, error) {
	out := new(OpenProjectResponse)
	err := grpc.Invoke(ctx, "/paas.ci.openshift.SimpleService/OpenProject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simpleServiceClient) DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*DeleteProjectResponse, error) {
	out := new(DeleteProjectResponse)
	err := grpc.Invoke(ctx, "/paas.ci.openshift.SimpleService/DeleteProject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SimpleService service

type SimpleServiceServer interface {
	EnterWorkspace(context.Context, *EnterWorkspaceRequest) (*EnterWorkspaceResponse, error)
	LeaveWorkspace(context.Context, *LeaveWorkspaceRequest) (*LeaveWorkspaceResponse, error)
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	LookupProjects(context.Context, *LookupProjectsRequest) (*LookupProjectsResponse, error)
	OpenProject(context.Context, *OpenProjectRequest) (*OpenProjectResponse, error)
	DeleteProject(context.Context, *DeleteProjectRequest) (*DeleteProjectResponse, error)
}

func RegisterSimpleServiceServer(s *grpc.Server, srv SimpleServiceServer) {
	s.RegisterService(&_SimpleService_serviceDesc, srv)
}

func _SimpleService_EnterWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnterWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServiceServer).EnterWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paas.ci.openshift.SimpleService/EnterWorkspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServiceServer).EnterWorkspace(ctx, req.(*EnterWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimpleService_LeaveWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServiceServer).LeaveWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paas.ci.openshift.SimpleService/LeaveWorkspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServiceServer).LeaveWorkspace(ctx, req.(*LeaveWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimpleService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paas.ci.openshift.SimpleService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServiceServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimpleService_LookupProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServiceServer).LookupProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paas.ci.openshift.SimpleService/LookupProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServiceServer).LookupProjects(ctx, req.(*LookupProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimpleService_OpenProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServiceServer).OpenProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paas.ci.openshift.SimpleService/OpenProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServiceServer).OpenProject(ctx, req.(*OpenProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimpleService_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServiceServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paas.ci.openshift.SimpleService/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServiceServer).DeleteProject(ctx, req.(*DeleteProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SimpleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "paas.ci.openshift.SimpleService",
	HandlerType: (*SimpleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnterWorkspace",
			Handler:    _SimpleService_EnterWorkspace_Handler,
		},
		{
			MethodName: "LeaveWorkspace",
			Handler:    _SimpleService_LeaveWorkspace_Handler,
		},
		{
			MethodName: "CreateProject",
			Handler:    _SimpleService_CreateProject_Handler,
		},
		{
			MethodName: "LookupProjects",
			Handler:    _SimpleService_LookupProjects_Handler,
		},
		{
			MethodName: "OpenProject",
			Handler:    _SimpleService_OpenProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _SimpleService_DeleteProject_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 630 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x55, 0xdb, 0x6e, 0x13, 0x3d,
	0x10, 0x56, 0xda, 0xfe, 0x7f, 0xe9, 0xf4, 0x20, 0x6a, 0x9a, 0x12, 0x45, 0x08, 0x2a, 0x4b, 0x94,
	0x20, 0xaa, 0x44, 0x82, 0x0b, 0xb8, 0xa5, 0x0d, 0xa0, 0x22, 0xd4, 0x56, 0x09, 0x07, 0x09, 0x71,
	0xe3, 0x6c, 0x26, 0x89, 0xc9, 0x66, 0x6d, 0x6c, 0x27, 0x82, 0x6b, 0x5e, 0x82, 0x97, 0xe0, 0xc5,
	0x78, 0x0a, 0xd6, 0xbb, 0x4e, 0xb2, 0xbb, 0x31, 0xa4, 0x88, 0x72, 0x37, 0xfe, 0x32, 0x87, 0x6f,
	0x66, 0x76, 0xbe, 0xc0, 0x1d, 0xc9, 0x98, 0x6e, 0x04, 0xbc, 0x21, 0x24, 0x46, 0x7a, 0xc0, 0x7b,
	0xa6, 0xa1, 0x51, 0x4d, 0x78, 0x80, 0x75, 0xa9, 0x84, 0x11, 0x64, 0xd7, 0x3a, 0xd4, 0x03, 0x5e,
	0x9f, 0x39, 0xd0, 0x37, 0x50, 0x7e, 0x16, 0x19, 0x54, 0xef, 0x84, 0x1a, 0x6a, 0xc9, 0x02, 0x6c,
	0xe1, 0xa7, 0x31, 0x6a, 0x43, 0xaa, 0x70, 0x6d, 0x1c, 0x47, 0x47, 0x6c, 0x84, 0x95, 0xd2, 0x41,
	0xa9, 0xb6, 0xd1, 0x9a, 0xbd, 0xc9, 0x01, 0x6c, 0x06, 0x0a, 0xbb, 0x18, 0x19, 0xce, 0x42, 0x5d,
	0x59, 0x49, 0x7e, 0xce, 0x42, 0xf4, 0x09, 0xec, 0x17, 0xd3, 0x6a, 0x29, 0x22, 0x8d, 0xe4, 0x36,
	0x00, 0x4f, 0xdc, 0x7a, 0x1c, 0x95, 0xcb, 0x9c, 0x41, 0x68, 0x1b, 0xca, 0xaf, 0x90, 0x4d, 0xf0,
	0x8f, 0x08, 0xe5, 0x93, 0xae, 0x2c, 0x24, 0x3d, 0x82, 0xfd, 0x62, 0x52, 0x47, 0x87, 0xc0, 0x5a,
	0x2f, 0x64, 0xfd, 0x24, 0xe3, 0x6a, 0x2b, 0xb1, 0xe9, 0xb7, 0x12, 0xec, 0x9d, 0x28, 0x64, 0x06,
	0x2f, 0x94, 0xf8, 0x88, 0x81, 0x99, 0x52, 0x58, 0xc2, 0x9d, 0xdc, 0x82, 0x0d, 0x99, 0x46, 0x9c,
	0x36, 0x1d, 0x8b, 0x39, 0x60, 0xa7, 0xe6, 0x1e, 0x67, 0xb6, 0x87, 0xd5, 0x74, 0x6a, 0x19, 0xc8,
	0x7a, 0x74, 0x51, 0x07, 0x8a, 0x4b, 0xc3, 0x45, 0x54, 0x59, 0x4b, 0x3d, 0x32, 0x10, 0x1d, 0x41,
	0xb9, 0xc0, 0x6c, 0x3e, 0x56, 0x26, 0xf9, 0x5b, 0x54, 0xda, 0x46, 0x3a, 0x6a, 0x73, 0xc4, 0xf6,
	0x39, 0xe4, 0x51, 0xd7, 0xb1, 0x4a, 0xec, 0x0c, 0xa1, 0x97, 0xed, 0xf3, 0xb3, 0x84, 0xd0, 0x56,
	0x2b, 0x0b, 0xd1, 0xc7, 0xf1, 0x32, 0x84, 0x18, 0x8e, 0xa5, 0x2b, 0xa7, 0x2f, 0x39, 0x09, 0x2a,
	0xe3, 0x81, 0x17, 0x02, 0xff, 0x82, 0x28, 0x85, 0x2d, 0xc7, 0x4a, 0x67, 0x98, 0xe6, 0x30, 0xda,
	0x02, 0x72, 0x1e, 0x7f, 0xd5, 0x57, 0xb9, 0x31, 0x3a, 0x84, 0x1b, 0xb9, 0x9c, 0xff, 0x74, 0xd6,
	0xaf, 0x61, 0xaf, 0x89, 0x21, 0x5e, 0xed, 0x47, 0x47, 0x1f, 0x40, 0xb9, 0x90, 0xf5, 0x37, 0x1f,
	0xfe, 0xf7, 0x12, 0xdc, 0x3c, 0x1e, 0xf3, 0xb0, 0xdb, 0x14, 0xc1, 0x10, 0xd5, 0xe9, 0x88, 0xf5,
	0x67, 0xe7, 0x77, 0x04, 0xbb, 0xdd, 0x04, 0xed, 0xf1, 0x10, 0x4f, 0x44, 0x7c, 0xdc, 0x91, 0x71,
	0x6c, 0x16, 0x7f, 0x20, 0x87, 0xb0, 0x13, 0x58, 0xf3, 0xb3, 0x79, 0xaa, 0x82, 0x01, 0x9f, 0xa0,
	0x63, 0x56, 0x40, 0x49, 0x05, 0xd6, 0xfb, 0xdc, 0x28, 0x94, 0xc2, 0xdd, 0xc3, 0xf4, 0x69, 0x77,
	0xde, 0xe1, 0x11, 0x53, 0x5f, 0xda, 0xf1, 0x9b, 0x8d, 0xdc, 0x31, 0xe4, 0x30, 0xfa, 0xb5, 0x04,
	0xeb, 0x2f, 0x78, 0xdc, 0x53, 0xec, 0x1f, 0xf7, 0xa3, 0xb9, 0x99, 0x4a, 0x43, 0x62, 0x93, 0xeb,
	0xb0, 0x3a, 0x56, 0xdc, 0x95, 0xb6, 0xa6, 0x45, 0x14, 0xf6, 0x5c, 0x2d, 0x6b, 0x26, 0x5a, 0x96,
	0x72, 0xba, 0x60, 0x66, 0x30, 0xbd, 0xb9, 0x0c, 0x64, 0x17, 0x90, 0x36, 0xf8, 0x3c, 0x6e, 0xb0,
	0xf2, 0x5f, 0xba, 0x80, 0x39, 0xf2, 0xf0, 0xc7, 0x1a, 0x6c, 0xb7, 0xf9, 0x48, 0x86, 0xd8, 0x4e,
	0xd5, 0x96, 0x20, 0xec, 0xe4, 0xd5, 0x8f, 0xd4, 0xea, 0x0b, 0xd2, 0x5b, 0xf7, 0xea, 0x6e, 0xf5,
	0xfe, 0x25, 0x3c, 0xdd, 0x0a, 0xe3, 0x32, 0x79, 0x55, 0xf3, 0x96, 0xf1, 0xaa, 0xa9, 0xb7, 0xcc,
	0x2f, 0x24, 0xb2, 0x03, 0xdb, 0x39, 0xcd, 0x21, 0xf7, 0x3c, 0xb1, 0x3e, 0xbd, 0xac, 0xd6, 0x96,
	0x3b, 0x66, 0x5a, 0xc9, 0xe9, 0x85, 0xbf, 0x15, 0x9f, 0x16, 0xf9, 0x5b, 0xf1, 0x8b, 0xcf, 0x07,
	0xd8, 0xcc, 0x1c, 0x34, 0xb9, 0xeb, 0x89, 0x5c, 0x14, 0x91, 0xea, 0xe1, 0x32, 0xb7, 0xf9, 0xa0,
	0x72, 0xb7, 0xe6, 0x1d, 0x94, 0xef, 0xc6, 0xbd, 0x83, 0xf2, 0x9e, 0xed, 0xf1, 0xe6, 0xfb, 0x8d,
	0x99, 0x4b, 0xe7, 0xff, 0xe4, 0x6f, 0xfd, 0xd1, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0xc2,
	0x54, 0x47, 0xf9, 0x07, 0x00, 0x00,
}
