// Code generated by protoc-gen-gogo.
// source: paas/ci/osopb3/model.proto
// DO NOT EDIT!

package osopb3

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import k8s_io_kubernetes_pkg_api_unversioned "k8s.io/kubernetes/pkg/api/unversioned"
import k8s_io_kubernetes_pkg_api_v1 "k8s.io/kubernetes/pkg/api/v1"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OsoBuildSourceType int32

const (
	OsoBuildSourceType_Git        OsoBuildSourceType = 0
	OsoBuildSourceType_Dockerfile OsoBuildSourceType = 1
	OsoBuildSourceType_Binary     OsoBuildSourceType = 2
	OsoBuildSourceType_Image      OsoBuildSourceType = 3
	OsoBuildSourceType_None       OsoBuildSourceType = 4
)

var OsoBuildSourceType_name = map[int32]string{
	0: "Git",
	1: "Dockerfile",
	2: "Binary",
	3: "Image",
	4: "None",
}
var OsoBuildSourceType_value = map[string]int32{
	"Git":        0,
	"Dockerfile": 1,
	"Binary":     2,
	"Image":      3,
	"None":       4,
}

func (x OsoBuildSourceType) String() string {
	return proto.EnumName(OsoBuildSourceType_name, int32(x))
}
func (OsoBuildSourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptorModel, []int{0} }

type OsoBuildOutputKind int32

const (
	OsoBuildOutputKind_ImageStreamTag OsoBuildOutputKind = 0
	OsoBuildOutputKind_DockerImage    OsoBuildOutputKind = 1
)

var OsoBuildOutputKind_name = map[int32]string{
	0: "ImageStreamTag",
	1: "DockerImage",
}
var OsoBuildOutputKind_value = map[string]int32{
	"ImageStreamTag": 0,
	"DockerImage":    1,
}

func (x OsoBuildOutputKind) String() string {
	return proto.EnumName(OsoBuildOutputKind_name, int32(x))
}
func (OsoBuildOutputKind) EnumDescriptor() ([]byte, []int) { return fileDescriptorModel, []int{1} }

type BuildStrategy_OsoBuildStrategyType int32

const (
	BuildStrategy_Docker          BuildStrategy_OsoBuildStrategyType = 0
	BuildStrategy_Source          BuildStrategy_OsoBuildStrategyType = 1
	BuildStrategy_Custom          BuildStrategy_OsoBuildStrategyType = 2
	BuildStrategy_JenkinsPipeline BuildStrategy_OsoBuildStrategyType = 3
)

var BuildStrategy_OsoBuildStrategyType_name = map[int32]string{
	0: "Docker",
	1: "Source",
	2: "Custom",
	3: "JenkinsPipeline",
}
var BuildStrategy_OsoBuildStrategyType_value = map[string]int32{
	"Docker":          0,
	"Source":          1,
	"Custom":          2,
	"JenkinsPipeline": 3,
}

func (x BuildStrategy_OsoBuildStrategyType) String() string {
	return proto.EnumName(BuildStrategy_OsoBuildStrategyType_name, int32(x))
}
func (BuildStrategy_OsoBuildStrategyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorModel, []int{10, 0}
}

type OsoBuildTriggerPolicy_OsoBuildTriggerType int32

const (
	OsoBuildTriggerPolicy_GitHub       OsoBuildTriggerPolicy_OsoBuildTriggerType = 0
	OsoBuildTriggerPolicy_Generic      OsoBuildTriggerPolicy_OsoBuildTriggerType = 1
	OsoBuildTriggerPolicy_ImageChange  OsoBuildTriggerPolicy_OsoBuildTriggerType = 2
	OsoBuildTriggerPolicy_ConfigChange OsoBuildTriggerPolicy_OsoBuildTriggerType = 3
)

var OsoBuildTriggerPolicy_OsoBuildTriggerType_name = map[int32]string{
	0: "GitHub",
	1: "Generic",
	2: "ImageChange",
	3: "ConfigChange",
}
var OsoBuildTriggerPolicy_OsoBuildTriggerType_value = map[string]int32{
	"GitHub":       0,
	"Generic":      1,
	"ImageChange":  2,
	"ConfigChange": 3,
}

func (x OsoBuildTriggerPolicy_OsoBuildTriggerType) String() string {
	return proto.EnumName(OsoBuildTriggerPolicy_OsoBuildTriggerType_name, int32(x))
}
func (OsoBuildTriggerPolicy_OsoBuildTriggerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorModel, []int{20, 0}
}

type OsoBuildStatus_OsoBuildPhase int32

const (
	OsoBuildStatus_New       OsoBuildStatus_OsoBuildPhase = 0
	OsoBuildStatus_Pending   OsoBuildStatus_OsoBuildPhase = 1
	OsoBuildStatus_Running   OsoBuildStatus_OsoBuildPhase = 2
	OsoBuildStatus_Complete  OsoBuildStatus_OsoBuildPhase = 3
	OsoBuildStatus_Failed    OsoBuildStatus_OsoBuildPhase = 4
	OsoBuildStatus_Error     OsoBuildStatus_OsoBuildPhase = 5
	OsoBuildStatus_Cancelled OsoBuildStatus_OsoBuildPhase = 6
)

var OsoBuildStatus_OsoBuildPhase_name = map[int32]string{
	0: "New",
	1: "Pending",
	2: "Running",
	3: "Complete",
	4: "Failed",
	5: "Error",
	6: "Cancelled",
}
var OsoBuildStatus_OsoBuildPhase_value = map[string]int32{
	"New":       0,
	"Pending":   1,
	"Running":   2,
	"Complete":  3,
	"Failed":    4,
	"Error":     5,
	"Cancelled": 6,
}

func (x OsoBuildStatus_OsoBuildPhase) String() string {
	return proto.EnumName(OsoBuildStatus_OsoBuildPhase_name, int32(x))
}
func (OsoBuildStatus_OsoBuildPhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorModel, []int{25, 0}
}

//
// A copy of OpenShift Build Protobuf
//
type SourceControlUser struct {
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (m *SourceControlUser) Reset()                    { *m = SourceControlUser{} }
func (m *SourceControlUser) String() string            { return proto.CompactTextString(m) }
func (*SourceControlUser) ProtoMessage()               {}
func (*SourceControlUser) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{0} }

type GitSourceRevision struct {
	Commit    string             `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	Author    *SourceControlUser `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Committer *SourceControlUser `protobuf:"bytes,3,opt,name=committer" json:"committer,omitempty"`
	Message   string             `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *GitSourceRevision) Reset()                    { *m = GitSourceRevision{} }
func (m *GitSourceRevision) String() string            { return proto.CompactTextString(m) }
func (*GitSourceRevision) ProtoMessage()               {}
func (*GitSourceRevision) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{1} }

func (m *GitSourceRevision) GetAuthor() *SourceControlUser {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *GitSourceRevision) GetCommitter() *SourceControlUser {
	if m != nil {
		return m.Committer
	}
	return nil
}

type SourceRevision struct {
	Type            string             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Git             *GitSourceRevision `protobuf:"bytes,2,opt,name=git" json:"git,omitempty"`
	BuildSourceType OsoBuildSourceType `protobuf:"varint,3,opt,name=buildSourceType,proto3,enum=paas.ci.osopb3.OsoBuildSourceType" json:"buildSourceType,omitempty"`
}

func (m *SourceRevision) Reset()                    { *m = SourceRevision{} }
func (m *SourceRevision) String() string            { return proto.CompactTextString(m) }
func (*SourceRevision) ProtoMessage()               {}
func (*SourceRevision) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{2} }

func (m *SourceRevision) GetGit() *GitSourceRevision {
	if m != nil {
		return m.Git
	}
	return nil
}

type BuildPostCommitSpec struct {
	Command []string `protobuf:"bytes,1,rep,name=command" json:"command,omitempty"`
	Args    []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	Script  string   `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
}

func (m *BuildPostCommitSpec) Reset()                    { *m = BuildPostCommitSpec{} }
func (m *BuildPostCommitSpec) String() string            { return proto.CompactTextString(m) }
func (*BuildPostCommitSpec) ProtoMessage()               {}
func (*BuildPostCommitSpec) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{3} }

type BuildOutput struct {
	To         *k8s_io_kubernetes_pkg_api_v1.ObjectReference      `protobuf:"bytes,1,opt,name=to" json:"to,omitempty"`
	PushSecret *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference `protobuf:"bytes,2,opt,name=pushSecret" json:"pushSecret,omitempty"`
}

func (m *BuildOutput) Reset()                    { *m = BuildOutput{} }
func (m *BuildOutput) String() string            { return proto.CompactTextString(m) }
func (*BuildOutput) ProtoMessage()               {}
func (*BuildOutput) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{4} }

func (m *BuildOutput) GetTo() *k8s_io_kubernetes_pkg_api_v1.ObjectReference {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *BuildOutput) GetPushSecret() *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference {
	if m != nil {
		return m.PushSecret
	}
	return nil
}

type JenkinsPipelineBuildStrategy struct {
	JenkinsfilePath string `protobuf:"bytes,1,opt,name=jenkinsfilePath,proto3" json:"jenkinsfilePath,omitempty"`
	Jenkinsfile     string `protobuf:"bytes,2,opt,name=jenkinsfile,proto3" json:"jenkinsfile,omitempty"`
}

func (m *JenkinsPipelineBuildStrategy) Reset()         { *m = JenkinsPipelineBuildStrategy{} }
func (m *JenkinsPipelineBuildStrategy) String() string { return proto.CompactTextString(m) }
func (*JenkinsPipelineBuildStrategy) ProtoMessage()    {}
func (*JenkinsPipelineBuildStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptorModel, []int{5}
}

type SecretSpec struct {
	SecretSource *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference `protobuf:"bytes,1,opt,name=secretSource" json:"secretSource,omitempty"`
	MountPath    string                                             `protobuf:"bytes,2,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
}

func (m *SecretSpec) Reset()                    { *m = SecretSpec{} }
func (m *SecretSpec) String() string            { return proto.CompactTextString(m) }
func (*SecretSpec) ProtoMessage()               {}
func (*SecretSpec) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{6} }

func (m *SecretSpec) GetSecretSource() *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference {
	if m != nil {
		return m.SecretSource
	}
	return nil
}

type CustomBuildStrategy struct {
	From               *k8s_io_kubernetes_pkg_api_v1.ObjectReference      `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	PullSecret         *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference `protobuf:"bytes,2,opt,name=pullSecret" json:"pullSecret,omitempty"`
	Env                []*k8s_io_kubernetes_pkg_api_v1.EnvVar             `protobuf:"bytes,3,rep,name=env" json:"env,omitempty"`
	ExposeDockerSocket bool                                               `protobuf:"varint,4,opt,name=exposeDockerSocket,proto3" json:"exposeDockerSocket,omitempty"`
	ForcePull          bool                                               `protobuf:"varint,5,opt,name=forcePull,proto3" json:"forcePull,omitempty"`
	Secrets            []*SecretSpec                                      `protobuf:"bytes,6,rep,name=secrets" json:"secrets,omitempty"`
	BuildAPIVersion    string                                             `protobuf:"bytes,7,opt,name=buildAPIVersion,proto3" json:"buildAPIVersion,omitempty"`
}

func (m *CustomBuildStrategy) Reset()                    { *m = CustomBuildStrategy{} }
func (m *CustomBuildStrategy) String() string            { return proto.CompactTextString(m) }
func (*CustomBuildStrategy) ProtoMessage()               {}
func (*CustomBuildStrategy) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{7} }

func (m *CustomBuildStrategy) GetFrom() *k8s_io_kubernetes_pkg_api_v1.ObjectReference {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *CustomBuildStrategy) GetPullSecret() *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference {
	if m != nil {
		return m.PullSecret
	}
	return nil
}

func (m *CustomBuildStrategy) GetEnv() []*k8s_io_kubernetes_pkg_api_v1.EnvVar {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *CustomBuildStrategy) GetSecrets() []*SecretSpec {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type SourceBuildStrategy struct {
	From        *k8s_io_kubernetes_pkg_api_v1.ObjectReference      `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	PullSecret  *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference `protobuf:"bytes,2,opt,name=pullSecret" json:"pullSecret,omitempty"`
	Env         []*k8s_io_kubernetes_pkg_api_v1.EnvVar             `protobuf:"bytes,3,rep,name=env" json:"env,omitempty"`
	Scripts     string                                             `protobuf:"bytes,4,opt,name=scripts,proto3" json:"scripts,omitempty"`
	Incremental bool                                               `protobuf:"varint,5,opt,name=incremental,proto3" json:"incremental,omitempty"`
	ForcePull   bool                                               `protobuf:"varint,6,opt,name=forcePull,proto3" json:"forcePull,omitempty"`
}

func (m *SourceBuildStrategy) Reset()                    { *m = SourceBuildStrategy{} }
func (m *SourceBuildStrategy) String() string            { return proto.CompactTextString(m) }
func (*SourceBuildStrategy) ProtoMessage()               {}
func (*SourceBuildStrategy) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{8} }

func (m *SourceBuildStrategy) GetFrom() *k8s_io_kubernetes_pkg_api_v1.ObjectReference {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *SourceBuildStrategy) GetPullSecret() *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference {
	if m != nil {
		return m.PullSecret
	}
	return nil
}

func (m *SourceBuildStrategy) GetEnv() []*k8s_io_kubernetes_pkg_api_v1.EnvVar {
	if m != nil {
		return m.Env
	}
	return nil
}

type DockerBuildStrategy struct {
	From           *k8s_io_kubernetes_pkg_api_v1.ObjectReference      `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	PullSecret     *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference `protobuf:"bytes,2,opt,name=pullSecret" json:"pullSecret,omitempty"`
	NoCache        bool                                               `protobuf:"varint,3,opt,name=noCache,proto3" json:"noCache,omitempty"`
	Env            []*k8s_io_kubernetes_pkg_api_v1.EnvVar             `protobuf:"bytes,4,rep,name=env" json:"env,omitempty"`
	ForcePull      bool                                               `protobuf:"varint,5,opt,name=forcePull,proto3" json:"forcePull,omitempty"`
	DockerfilePath string                                             `protobuf:"bytes,6,opt,name=dockerfilePath,proto3" json:"dockerfilePath,omitempty"`
}

func (m *DockerBuildStrategy) Reset()                    { *m = DockerBuildStrategy{} }
func (m *DockerBuildStrategy) String() string            { return proto.CompactTextString(m) }
func (*DockerBuildStrategy) ProtoMessage()               {}
func (*DockerBuildStrategy) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{9} }

func (m *DockerBuildStrategy) GetFrom() *k8s_io_kubernetes_pkg_api_v1.ObjectReference {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *DockerBuildStrategy) GetPullSecret() *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference {
	if m != nil {
		return m.PullSecret
	}
	return nil
}

func (m *DockerBuildStrategy) GetEnv() []*k8s_io_kubernetes_pkg_api_v1.EnvVar {
	if m != nil {
		return m.Env
	}
	return nil
}

type BuildStrategy struct {
	Type                    string                             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	DockerStrategy          *DockerBuildStrategy               `protobuf:"bytes,2,opt,name=dockerStrategy" json:"dockerStrategy,omitempty"`
	SourceStrategy          *SourceBuildStrategy               `protobuf:"bytes,3,opt,name=sourceStrategy" json:"sourceStrategy,omitempty"`
	CustomStrategy          *CustomBuildStrategy               `protobuf:"bytes,4,opt,name=customStrategy" json:"customStrategy,omitempty"`
	JenkinsPipelineStrategy *JenkinsPipelineBuildStrategy      `protobuf:"bytes,5,opt,name=jenkinsPipelineStrategy" json:"jenkinsPipelineStrategy,omitempty"`
	OsoBuildStrategyType    BuildStrategy_OsoBuildStrategyType `protobuf:"varint,6,opt,name=osoBuildStrategyType,proto3,enum=paas.ci.osopb3.BuildStrategy_OsoBuildStrategyType" json:"osoBuildStrategyType,omitempty"`
}

func (m *BuildStrategy) Reset()                    { *m = BuildStrategy{} }
func (m *BuildStrategy) String() string            { return proto.CompactTextString(m) }
func (*BuildStrategy) ProtoMessage()               {}
func (*BuildStrategy) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{10} }

func (m *BuildStrategy) GetDockerStrategy() *DockerBuildStrategy {
	if m != nil {
		return m.DockerStrategy
	}
	return nil
}

func (m *BuildStrategy) GetSourceStrategy() *SourceBuildStrategy {
	if m != nil {
		return m.SourceStrategy
	}
	return nil
}

func (m *BuildStrategy) GetCustomStrategy() *CustomBuildStrategy {
	if m != nil {
		return m.CustomStrategy
	}
	return nil
}

func (m *BuildStrategy) GetJenkinsPipelineStrategy() *JenkinsPipelineBuildStrategy {
	if m != nil {
		return m.JenkinsPipelineStrategy
	}
	return nil
}

type SecretBuildSource struct {
	Secret         *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference `protobuf:"bytes,1,opt,name=secret" json:"secret,omitempty"`
	DestinationDir string                                             `protobuf:"bytes,2,opt,name=destinationDir,proto3" json:"destinationDir,omitempty"`
}

func (m *SecretBuildSource) Reset()                    { *m = SecretBuildSource{} }
func (m *SecretBuildSource) String() string            { return proto.CompactTextString(m) }
func (*SecretBuildSource) ProtoMessage()               {}
func (*SecretBuildSource) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{11} }

func (m *SecretBuildSource) GetSecret() *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference {
	if m != nil {
		return m.Secret
	}
	return nil
}

type ImageSourcePath struct {
	SourcePath     string `protobuf:"bytes,1,opt,name=sourcePath,proto3" json:"sourcePath,omitempty"`
	DestinationDir string `protobuf:"bytes,2,opt,name=destinationDir,proto3" json:"destinationDir,omitempty"`
}

func (m *ImageSourcePath) Reset()                    { *m = ImageSourcePath{} }
func (m *ImageSourcePath) String() string            { return proto.CompactTextString(m) }
func (*ImageSourcePath) ProtoMessage()               {}
func (*ImageSourcePath) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{12} }

type ImageSource struct {
	From       *k8s_io_kubernetes_pkg_api_v1.ObjectReference      `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	Paths      []*ImageSourcePath                                 `protobuf:"bytes,2,rep,name=paths" json:"paths,omitempty"`
	PullSecret *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference `protobuf:"bytes,3,opt,name=pullSecret" json:"pullSecret,omitempty"`
}

func (m *ImageSource) Reset()                    { *m = ImageSource{} }
func (m *ImageSource) String() string            { return proto.CompactTextString(m) }
func (*ImageSource) ProtoMessage()               {}
func (*ImageSource) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{13} }

func (m *ImageSource) GetFrom() *k8s_io_kubernetes_pkg_api_v1.ObjectReference {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *ImageSource) GetPaths() []*ImageSourcePath {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *ImageSource) GetPullSecret() *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference {
	if m != nil {
		return m.PullSecret
	}
	return nil
}

type GitBuildSource struct {
	Uri        string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Ref        string `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	HttpProxy  string `protobuf:"bytes,3,opt,name=httpProxy,proto3" json:"httpProxy,omitempty"`
	HttpsProxy string `protobuf:"bytes,4,opt,name=httpsProxy,proto3" json:"httpsProxy,omitempty"`
}

func (m *GitBuildSource) Reset()                    { *m = GitBuildSource{} }
func (m *GitBuildSource) String() string            { return proto.CompactTextString(m) }
func (*GitBuildSource) ProtoMessage()               {}
func (*GitBuildSource) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{14} }

type BinaryBuildSource struct {
	AsFile string `protobuf:"bytes,1,opt,name=asFile,proto3" json:"asFile,omitempty"`
}

func (m *BinaryBuildSource) Reset()                    { *m = BinaryBuildSource{} }
func (m *BinaryBuildSource) String() string            { return proto.CompactTextString(m) }
func (*BinaryBuildSource) ProtoMessage()               {}
func (*BinaryBuildSource) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{15} }

type BuildSource struct {
	Type               string                                             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Binary             *BinaryBuildSource                                 `protobuf:"bytes,2,opt,name=binary" json:"binary,omitempty"`
	Dockerfile         string                                             `protobuf:"bytes,3,opt,name=dockerfile,proto3" json:"dockerfile,omitempty"`
	Git                *GitBuildSource                                    `protobuf:"bytes,4,opt,name=git" json:"git,omitempty"`
	Images             []*ImageSource                                     `protobuf:"bytes,5,rep,name=images" json:"images,omitempty"`
	ContextDir         string                                             `protobuf:"bytes,6,opt,name=contextDir,proto3" json:"contextDir,omitempty"`
	SourceSecret       *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference `protobuf:"bytes,7,opt,name=sourceSecret" json:"sourceSecret,omitempty"`
	Secrets            []*SecretBuildSource                               `protobuf:"bytes,8,rep,name=secrets" json:"secrets,omitempty"`
	OsoBuildSourceType OsoBuildSourceType                                 `protobuf:"varint,9,opt,name=osoBuildSourceType,proto3,enum=paas.ci.osopb3.OsoBuildSourceType" json:"osoBuildSourceType,omitempty"`
}

func (m *BuildSource) Reset()                    { *m = BuildSource{} }
func (m *BuildSource) String() string            { return proto.CompactTextString(m) }
func (*BuildSource) ProtoMessage()               {}
func (*BuildSource) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{16} }

func (m *BuildSource) GetBinary() *BinaryBuildSource {
	if m != nil {
		return m.Binary
	}
	return nil
}

func (m *BuildSource) GetGit() *GitBuildSource {
	if m != nil {
		return m.Git
	}
	return nil
}

func (m *BuildSource) GetImages() []*ImageSource {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *BuildSource) GetSourceSecret() *k8s_io_kubernetes_pkg_api_v1.LocalObjectReference {
	if m != nil {
		return m.SourceSecret
	}
	return nil
}

func (m *BuildSource) GetSecrets() []*SecretBuildSource {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type OsoCommonSpec struct {
	ServiceAccount            string                                             `protobuf:"bytes,1,opt,name=serviceAccount,proto3" json:"serviceAccount,omitempty"`
	Source                    *BuildSource                                       `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	Revision                  *SourceRevision                                    `protobuf:"bytes,3,opt,name=revision" json:"revision,omitempty"`
	Strategy                  *BuildStrategy                                     `protobuf:"bytes,4,opt,name=strategy" json:"strategy,omitempty"`
	Output                    *BuildOutput                                       `protobuf:"bytes,5,opt,name=output" json:"output,omitempty"`
	Resources                 *k8s_io_kubernetes_pkg_api_v1.ResourceRequirements `protobuf:"bytes,6,opt,name=resources" json:"resources,omitempty"`
	PostCommit                *BuildPostCommitSpec                               `protobuf:"bytes,7,opt,name=postCommit" json:"postCommit,omitempty"`
	CompletionDeadlineSeconds int64                                              `protobuf:"varint,8,opt,name=completionDeadlineSeconds,proto3" json:"completionDeadlineSeconds,omitempty"`
}

func (m *OsoCommonSpec) Reset()                    { *m = OsoCommonSpec{} }
func (m *OsoCommonSpec) String() string            { return proto.CompactTextString(m) }
func (*OsoCommonSpec) ProtoMessage()               {}
func (*OsoCommonSpec) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{17} }

func (m *OsoCommonSpec) GetSource() *BuildSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *OsoCommonSpec) GetRevision() *SourceRevision {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *OsoCommonSpec) GetStrategy() *BuildStrategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

func (m *OsoCommonSpec) GetOutput() *BuildOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *OsoCommonSpec) GetResources() *k8s_io_kubernetes_pkg_api_v1.ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *OsoCommonSpec) GetPostCommit() *BuildPostCommitSpec {
	if m != nil {
		return m.PostCommit
	}
	return nil
}

type WebHookTrigger struct {
	Secret   string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	AllowEnv bool   `protobuf:"varint,2,opt,name=allowEnv,proto3" json:"allowEnv,omitempty"`
}

func (m *WebHookTrigger) Reset()                    { *m = WebHookTrigger{} }
func (m *WebHookTrigger) String() string            { return proto.CompactTextString(m) }
func (*WebHookTrigger) ProtoMessage()               {}
func (*WebHookTrigger) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{18} }

type ImageChangeTrigger struct {
	LastTriggeredImageID string                                        `protobuf:"bytes,1,opt,name=lastTriggeredImageID,proto3" json:"lastTriggeredImageID,omitempty"`
	From                 *k8s_io_kubernetes_pkg_api_v1.ObjectReference `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
}

func (m *ImageChangeTrigger) Reset()                    { *m = ImageChangeTrigger{} }
func (m *ImageChangeTrigger) String() string            { return proto.CompactTextString(m) }
func (*ImageChangeTrigger) ProtoMessage()               {}
func (*ImageChangeTrigger) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{19} }

func (m *ImageChangeTrigger) GetFrom() *k8s_io_kubernetes_pkg_api_v1.ObjectReference {
	if m != nil {
		return m.From
	}
	return nil
}

type OsoBuildTriggerPolicy struct {
	Type                string                                    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	GithubWebHook       *WebHookTrigger                           `protobuf:"bytes,2,opt,name=githubWebHook" json:"githubWebHook,omitempty"`
	GenericWebHook      *WebHookTrigger                           `protobuf:"bytes,3,opt,name=genericWebHook" json:"genericWebHook,omitempty"`
	ImageChange         *ImageChangeTrigger                       `protobuf:"bytes,4,opt,name=imageChange" json:"imageChange,omitempty"`
	OsoBuildTriggerType OsoBuildTriggerPolicy_OsoBuildTriggerType `protobuf:"varint,5,opt,name=osoBuildTriggerType,proto3,enum=paas.ci.osopb3.OsoBuildTriggerPolicy_OsoBuildTriggerType" json:"osoBuildTriggerType,omitempty"`
}

func (m *OsoBuildTriggerPolicy) Reset()                    { *m = OsoBuildTriggerPolicy{} }
func (m *OsoBuildTriggerPolicy) String() string            { return proto.CompactTextString(m) }
func (*OsoBuildTriggerPolicy) ProtoMessage()               {}
func (*OsoBuildTriggerPolicy) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{20} }

func (m *OsoBuildTriggerPolicy) GetGithubWebHook() *WebHookTrigger {
	if m != nil {
		return m.GithubWebHook
	}
	return nil
}

func (m *OsoBuildTriggerPolicy) GetGenericWebHook() *WebHookTrigger {
	if m != nil {
		return m.GenericWebHook
	}
	return nil
}

func (m *OsoBuildTriggerPolicy) GetImageChange() *ImageChangeTrigger {
	if m != nil {
		return m.ImageChange
	}
	return nil
}

type GenericWebHookCause struct {
	Revision *SourceRevision `protobuf:"bytes,1,opt,name=revision" json:"revision,omitempty"`
	Secret   string          `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (m *GenericWebHookCause) Reset()                    { *m = GenericWebHookCause{} }
func (m *GenericWebHookCause) String() string            { return proto.CompactTextString(m) }
func (*GenericWebHookCause) ProtoMessage()               {}
func (*GenericWebHookCause) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{21} }

func (m *GenericWebHookCause) GetRevision() *SourceRevision {
	if m != nil {
		return m.Revision
	}
	return nil
}

type GitHubWebHookCause struct {
	Revision *SourceRevision `protobuf:"bytes,1,opt,name=revision" json:"revision,omitempty"`
	Secret   string          `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (m *GitHubWebHookCause) Reset()                    { *m = GitHubWebHookCause{} }
func (m *GitHubWebHookCause) String() string            { return proto.CompactTextString(m) }
func (*GitHubWebHookCause) ProtoMessage()               {}
func (*GitHubWebHookCause) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{22} }

func (m *GitHubWebHookCause) GetRevision() *SourceRevision {
	if m != nil {
		return m.Revision
	}
	return nil
}

type ImageChangeCause struct {
	ImageID string                                        `protobuf:"bytes,1,opt,name=imageID,proto3" json:"imageID,omitempty"`
	FromRef *k8s_io_kubernetes_pkg_api_v1.ObjectReference `protobuf:"bytes,2,opt,name=fromRef" json:"fromRef,omitempty"`
}

func (m *ImageChangeCause) Reset()                    { *m = ImageChangeCause{} }
func (m *ImageChangeCause) String() string            { return proto.CompactTextString(m) }
func (*ImageChangeCause) ProtoMessage()               {}
func (*ImageChangeCause) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{23} }

func (m *ImageChangeCause) GetFromRef() *k8s_io_kubernetes_pkg_api_v1.ObjectReference {
	if m != nil {
		return m.FromRef
	}
	return nil
}

type OsoBuildTriggerCause struct {
	Message          string               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	GenericWebHook   *GenericWebHookCause `protobuf:"bytes,2,opt,name=genericWebHook" json:"genericWebHook,omitempty"`
	GithubWebHook    *GitHubWebHookCause  `protobuf:"bytes,3,opt,name=githubWebHook" json:"githubWebHook,omitempty"`
	ImageChangeBuild *ImageChangeCause    `protobuf:"bytes,4,opt,name=imageChangeBuild" json:"imageChangeBuild,omitempty"`
}

func (m *OsoBuildTriggerCause) Reset()                    { *m = OsoBuildTriggerCause{} }
func (m *OsoBuildTriggerCause) String() string            { return proto.CompactTextString(m) }
func (*OsoBuildTriggerCause) ProtoMessage()               {}
func (*OsoBuildTriggerCause) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{24} }

func (m *OsoBuildTriggerCause) GetGenericWebHook() *GenericWebHookCause {
	if m != nil {
		return m.GenericWebHook
	}
	return nil
}

func (m *OsoBuildTriggerCause) GetGithubWebHook() *GitHubWebHookCause {
	if m != nil {
		return m.GithubWebHook
	}
	return nil
}

func (m *OsoBuildTriggerCause) GetImageChangeBuild() *ImageChangeCause {
	if m != nil {
		return m.ImageChangeBuild
	}
	return nil
}

type OsoBuildStatus struct {
	Phase                      string                                        `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
	Cancelled                  bool                                          `protobuf:"varint,2,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	Reason                     string                                        `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Message                    string                                        `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	StartTimestamp             *k8s_io_kubernetes_pkg_api_unversioned.Time   `protobuf:"bytes,5,opt,name=startTimestamp" json:"startTimestamp,omitempty"`
	CompletionTimestamp        *k8s_io_kubernetes_pkg_api_unversioned.Time   `protobuf:"bytes,6,opt,name=completionTimestamp" json:"completionTimestamp,omitempty"`
	Duration                   int64                                         `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	OutputDockerImageReference string                                        `protobuf:"bytes,8,opt,name=outputDockerImageReference,proto3" json:"outputDockerImageReference,omitempty"`
	Config                     *k8s_io_kubernetes_pkg_api_v1.ObjectReference `protobuf:"bytes,9,opt,name=config" json:"config,omitempty"`
	OsoBuildPhase              OsoBuildStatus_OsoBuildPhase                  `protobuf:"varint,10,opt,name=osoBuildPhase,proto3,enum=paas.ci.osopb3.OsoBuildStatus_OsoBuildPhase" json:"osoBuildPhase,omitempty"`
}

func (m *OsoBuildStatus) Reset()                    { *m = OsoBuildStatus{} }
func (m *OsoBuildStatus) String() string            { return proto.CompactTextString(m) }
func (*OsoBuildStatus) ProtoMessage()               {}
func (*OsoBuildStatus) Descriptor() ([]byte, []int) { return fileDescriptorModel, []int{25} }

func (m *OsoBuildStatus) GetStartTimestamp() *k8s_io_kubernetes_pkg_api_unversioned.Time {
	if m != nil {
		return m.StartTimestamp
	}
	return nil
}

func (m *OsoBuildStatus) GetCompletionTimestamp() *k8s_io_kubernetes_pkg_api_unversioned.Time {
	if m != nil {
		return m.CompletionTimestamp
	}
	return nil
}

func (m *OsoBuildStatus) GetConfig() *k8s_io_kubernetes_pkg_api_v1.ObjectReference {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*SourceControlUser)(nil), "paas.ci.osopb3.SourceControlUser")
	proto.RegisterType((*GitSourceRevision)(nil), "paas.ci.osopb3.GitSourceRevision")
	proto.RegisterType((*SourceRevision)(nil), "paas.ci.osopb3.SourceRevision")
	proto.RegisterType((*BuildPostCommitSpec)(nil), "paas.ci.osopb3.BuildPostCommitSpec")
	proto.RegisterType((*BuildOutput)(nil), "paas.ci.osopb3.BuildOutput")
	proto.RegisterType((*JenkinsPipelineBuildStrategy)(nil), "paas.ci.osopb3.JenkinsPipelineBuildStrategy")
	proto.RegisterType((*SecretSpec)(nil), "paas.ci.osopb3.SecretSpec")
	proto.RegisterType((*CustomBuildStrategy)(nil), "paas.ci.osopb3.CustomBuildStrategy")
	proto.RegisterType((*SourceBuildStrategy)(nil), "paas.ci.osopb3.SourceBuildStrategy")
	proto.RegisterType((*DockerBuildStrategy)(nil), "paas.ci.osopb3.DockerBuildStrategy")
	proto.RegisterType((*BuildStrategy)(nil), "paas.ci.osopb3.BuildStrategy")
	proto.RegisterType((*SecretBuildSource)(nil), "paas.ci.osopb3.SecretBuildSource")
	proto.RegisterType((*ImageSourcePath)(nil), "paas.ci.osopb3.ImageSourcePath")
	proto.RegisterType((*ImageSource)(nil), "paas.ci.osopb3.ImageSource")
	proto.RegisterType((*GitBuildSource)(nil), "paas.ci.osopb3.GitBuildSource")
	proto.RegisterType((*BinaryBuildSource)(nil), "paas.ci.osopb3.BinaryBuildSource")
	proto.RegisterType((*BuildSource)(nil), "paas.ci.osopb3.BuildSource")
	proto.RegisterType((*OsoCommonSpec)(nil), "paas.ci.osopb3.OsoCommonSpec")
	proto.RegisterType((*WebHookTrigger)(nil), "paas.ci.osopb3.WebHookTrigger")
	proto.RegisterType((*ImageChangeTrigger)(nil), "paas.ci.osopb3.ImageChangeTrigger")
	proto.RegisterType((*OsoBuildTriggerPolicy)(nil), "paas.ci.osopb3.OsoBuildTriggerPolicy")
	proto.RegisterType((*GenericWebHookCause)(nil), "paas.ci.osopb3.GenericWebHookCause")
	proto.RegisterType((*GitHubWebHookCause)(nil), "paas.ci.osopb3.GitHubWebHookCause")
	proto.RegisterType((*ImageChangeCause)(nil), "paas.ci.osopb3.ImageChangeCause")
	proto.RegisterType((*OsoBuildTriggerCause)(nil), "paas.ci.osopb3.OsoBuildTriggerCause")
	proto.RegisterType((*OsoBuildStatus)(nil), "paas.ci.osopb3.OsoBuildStatus")
	proto.RegisterEnum("paas.ci.osopb3.OsoBuildSourceType", OsoBuildSourceType_name, OsoBuildSourceType_value)
	proto.RegisterEnum("paas.ci.osopb3.OsoBuildOutputKind", OsoBuildOutputKind_name, OsoBuildOutputKind_value)
	proto.RegisterEnum("paas.ci.osopb3.BuildStrategy_OsoBuildStrategyType", BuildStrategy_OsoBuildStrategyType_name, BuildStrategy_OsoBuildStrategyType_value)
	proto.RegisterEnum("paas.ci.osopb3.OsoBuildTriggerPolicy_OsoBuildTriggerType", OsoBuildTriggerPolicy_OsoBuildTriggerType_name, OsoBuildTriggerPolicy_OsoBuildTriggerType_value)
	proto.RegisterEnum("paas.ci.osopb3.OsoBuildStatus_OsoBuildPhase", OsoBuildStatus_OsoBuildPhase_name, OsoBuildStatus_OsoBuildPhase_value)
}
func (m *SourceControlUser) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *SourceControlUser) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Name)))
		i += copy(data[i:], m.Name)
	}
	if len(m.Email) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Email)))
		i += copy(data[i:], m.Email)
	}
	return i, nil
}

func (m *GitSourceRevision) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *GitSourceRevision) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Commit) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Commit)))
		i += copy(data[i:], m.Commit)
	}
	if m.Author != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.Author.Size()))
		n1, err := m.Author.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.Committer != nil {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(m.Committer.Size()))
		n2, err := m.Committer.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if len(m.Message) > 0 {
		data[i] = 0x22
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Message)))
		i += copy(data[i:], m.Message)
	}
	return i, nil
}

func (m *SourceRevision) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *SourceRevision) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Type) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Type)))
		i += copy(data[i:], m.Type)
	}
	if m.Git != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.Git.Size()))
		n3, err := m.Git.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.BuildSourceType != 0 {
		data[i] = 0x18
		i++
		i = encodeVarintModel(data, i, uint64(m.BuildSourceType))
	}
	return i, nil
}

func (m *BuildPostCommitSpec) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *BuildPostCommitSpec) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Command) > 0 {
		for _, s := range m.Command {
			data[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				data[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			data[i] = uint8(l)
			i++
			i += copy(data[i:], s)
		}
	}
	if len(m.Args) > 0 {
		for _, s := range m.Args {
			data[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				data[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			data[i] = uint8(l)
			i++
			i += copy(data[i:], s)
		}
	}
	if len(m.Script) > 0 {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Script)))
		i += copy(data[i:], m.Script)
	}
	return i, nil
}

func (m *BuildOutput) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *BuildOutput) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.To != nil {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(m.To.Size()))
		n4, err := m.To.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.PushSecret != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.PushSecret.Size()))
		n5, err := m.PushSecret.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}

func (m *JenkinsPipelineBuildStrategy) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *JenkinsPipelineBuildStrategy) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.JenkinsfilePath) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.JenkinsfilePath)))
		i += copy(data[i:], m.JenkinsfilePath)
	}
	if len(m.Jenkinsfile) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Jenkinsfile)))
		i += copy(data[i:], m.Jenkinsfile)
	}
	return i, nil
}

func (m *SecretSpec) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *SecretSpec) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SecretSource != nil {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(m.SecretSource.Size()))
		n6, err := m.SecretSource.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if len(m.MountPath) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(len(m.MountPath)))
		i += copy(data[i:], m.MountPath)
	}
	return i, nil
}

func (m *CustomBuildStrategy) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *CustomBuildStrategy) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.From != nil {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(m.From.Size()))
		n7, err := m.From.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	if m.PullSecret != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.PullSecret.Size()))
		n8, err := m.PullSecret.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	if len(m.Env) > 0 {
		for _, msg := range m.Env {
			data[i] = 0x1a
			i++
			i = encodeVarintModel(data, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(data[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ExposeDockerSocket {
		data[i] = 0x20
		i++
		if m.ExposeDockerSocket {
			data[i] = 1
		} else {
			data[i] = 0
		}
		i++
	}
	if m.ForcePull {
		data[i] = 0x28
		i++
		if m.ForcePull {
			data[i] = 1
		} else {
			data[i] = 0
		}
		i++
	}
	if len(m.Secrets) > 0 {
		for _, msg := range m.Secrets {
			data[i] = 0x32
			i++
			i = encodeVarintModel(data, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(data[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.BuildAPIVersion) > 0 {
		data[i] = 0x3a
		i++
		i = encodeVarintModel(data, i, uint64(len(m.BuildAPIVersion)))
		i += copy(data[i:], m.BuildAPIVersion)
	}
	return i, nil
}

func (m *SourceBuildStrategy) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *SourceBuildStrategy) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.From != nil {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(m.From.Size()))
		n9, err := m.From.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	if m.PullSecret != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.PullSecret.Size()))
		n10, err := m.PullSecret.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	if len(m.Env) > 0 {
		for _, msg := range m.Env {
			data[i] = 0x1a
			i++
			i = encodeVarintModel(data, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(data[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Scripts) > 0 {
		data[i] = 0x22
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Scripts)))
		i += copy(data[i:], m.Scripts)
	}
	if m.Incremental {
		data[i] = 0x28
		i++
		if m.Incremental {
			data[i] = 1
		} else {
			data[i] = 0
		}
		i++
	}
	if m.ForcePull {
		data[i] = 0x30
		i++
		if m.ForcePull {
			data[i] = 1
		} else {
			data[i] = 0
		}
		i++
	}
	return i, nil
}

func (m *DockerBuildStrategy) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *DockerBuildStrategy) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.From != nil {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(m.From.Size()))
		n11, err := m.From.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	if m.PullSecret != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.PullSecret.Size()))
		n12, err := m.PullSecret.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	if m.NoCache {
		data[i] = 0x18
		i++
		if m.NoCache {
			data[i] = 1
		} else {
			data[i] = 0
		}
		i++
	}
	if len(m.Env) > 0 {
		for _, msg := range m.Env {
			data[i] = 0x22
			i++
			i = encodeVarintModel(data, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(data[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ForcePull {
		data[i] = 0x28
		i++
		if m.ForcePull {
			data[i] = 1
		} else {
			data[i] = 0
		}
		i++
	}
	if len(m.DockerfilePath) > 0 {
		data[i] = 0x32
		i++
		i = encodeVarintModel(data, i, uint64(len(m.DockerfilePath)))
		i += copy(data[i:], m.DockerfilePath)
	}
	return i, nil
}

func (m *BuildStrategy) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *BuildStrategy) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Type) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Type)))
		i += copy(data[i:], m.Type)
	}
	if m.DockerStrategy != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.DockerStrategy.Size()))
		n13, err := m.DockerStrategy.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	if m.SourceStrategy != nil {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(m.SourceStrategy.Size()))
		n14, err := m.SourceStrategy.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	if m.CustomStrategy != nil {
		data[i] = 0x22
		i++
		i = encodeVarintModel(data, i, uint64(m.CustomStrategy.Size()))
		n15, err := m.CustomStrategy.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n15
	}
	if m.JenkinsPipelineStrategy != nil {
		data[i] = 0x2a
		i++
		i = encodeVarintModel(data, i, uint64(m.JenkinsPipelineStrategy.Size()))
		n16, err := m.JenkinsPipelineStrategy.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n16
	}
	if m.OsoBuildStrategyType != 0 {
		data[i] = 0x30
		i++
		i = encodeVarintModel(data, i, uint64(m.OsoBuildStrategyType))
	}
	return i, nil
}

func (m *SecretBuildSource) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *SecretBuildSource) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Secret != nil {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(m.Secret.Size()))
		n17, err := m.Secret.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n17
	}
	if len(m.DestinationDir) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(len(m.DestinationDir)))
		i += copy(data[i:], m.DestinationDir)
	}
	return i, nil
}

func (m *ImageSourcePath) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *ImageSourcePath) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.SourcePath) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.SourcePath)))
		i += copy(data[i:], m.SourcePath)
	}
	if len(m.DestinationDir) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(len(m.DestinationDir)))
		i += copy(data[i:], m.DestinationDir)
	}
	return i, nil
}

func (m *ImageSource) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *ImageSource) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.From != nil {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(m.From.Size()))
		n18, err := m.From.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	if len(m.Paths) > 0 {
		for _, msg := range m.Paths {
			data[i] = 0x12
			i++
			i = encodeVarintModel(data, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(data[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.PullSecret != nil {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(m.PullSecret.Size()))
		n19, err := m.PullSecret.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	return i, nil
}

func (m *GitBuildSource) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *GitBuildSource) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Uri) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Uri)))
		i += copy(data[i:], m.Uri)
	}
	if len(m.Ref) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Ref)))
		i += copy(data[i:], m.Ref)
	}
	if len(m.HttpProxy) > 0 {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(len(m.HttpProxy)))
		i += copy(data[i:], m.HttpProxy)
	}
	if len(m.HttpsProxy) > 0 {
		data[i] = 0x22
		i++
		i = encodeVarintModel(data, i, uint64(len(m.HttpsProxy)))
		i += copy(data[i:], m.HttpsProxy)
	}
	return i, nil
}

func (m *BinaryBuildSource) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *BinaryBuildSource) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AsFile) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.AsFile)))
		i += copy(data[i:], m.AsFile)
	}
	return i, nil
}

func (m *BuildSource) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *BuildSource) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Type) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Type)))
		i += copy(data[i:], m.Type)
	}
	if m.Binary != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.Binary.Size()))
		n20, err := m.Binary.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	if len(m.Dockerfile) > 0 {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Dockerfile)))
		i += copy(data[i:], m.Dockerfile)
	}
	if m.Git != nil {
		data[i] = 0x22
		i++
		i = encodeVarintModel(data, i, uint64(m.Git.Size()))
		n21, err := m.Git.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	if len(m.Images) > 0 {
		for _, msg := range m.Images {
			data[i] = 0x2a
			i++
			i = encodeVarintModel(data, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(data[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ContextDir) > 0 {
		data[i] = 0x32
		i++
		i = encodeVarintModel(data, i, uint64(len(m.ContextDir)))
		i += copy(data[i:], m.ContextDir)
	}
	if m.SourceSecret != nil {
		data[i] = 0x3a
		i++
		i = encodeVarintModel(data, i, uint64(m.SourceSecret.Size()))
		n22, err := m.SourceSecret.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	if len(m.Secrets) > 0 {
		for _, msg := range m.Secrets {
			data[i] = 0x42
			i++
			i = encodeVarintModel(data, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(data[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.OsoBuildSourceType != 0 {
		data[i] = 0x48
		i++
		i = encodeVarintModel(data, i, uint64(m.OsoBuildSourceType))
	}
	return i, nil
}

func (m *OsoCommonSpec) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *OsoCommonSpec) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ServiceAccount) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.ServiceAccount)))
		i += copy(data[i:], m.ServiceAccount)
	}
	if m.Source != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.Source.Size()))
		n23, err := m.Source.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	if m.Revision != nil {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(m.Revision.Size()))
		n24, err := m.Revision.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n24
	}
	if m.Strategy != nil {
		data[i] = 0x22
		i++
		i = encodeVarintModel(data, i, uint64(m.Strategy.Size()))
		n25, err := m.Strategy.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n25
	}
	if m.Output != nil {
		data[i] = 0x2a
		i++
		i = encodeVarintModel(data, i, uint64(m.Output.Size()))
		n26, err := m.Output.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n26
	}
	if m.Resources != nil {
		data[i] = 0x32
		i++
		i = encodeVarintModel(data, i, uint64(m.Resources.Size()))
		n27, err := m.Resources.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n27
	}
	if m.PostCommit != nil {
		data[i] = 0x3a
		i++
		i = encodeVarintModel(data, i, uint64(m.PostCommit.Size()))
		n28, err := m.PostCommit.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n28
	}
	if m.CompletionDeadlineSeconds != 0 {
		data[i] = 0x40
		i++
		i = encodeVarintModel(data, i, uint64(m.CompletionDeadlineSeconds))
	}
	return i, nil
}

func (m *WebHookTrigger) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *WebHookTrigger) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Secret) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Secret)))
		i += copy(data[i:], m.Secret)
	}
	if m.AllowEnv {
		data[i] = 0x10
		i++
		if m.AllowEnv {
			data[i] = 1
		} else {
			data[i] = 0
		}
		i++
	}
	return i, nil
}

func (m *ImageChangeTrigger) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *ImageChangeTrigger) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.LastTriggeredImageID) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.LastTriggeredImageID)))
		i += copy(data[i:], m.LastTriggeredImageID)
	}
	if m.From != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.From.Size()))
		n29, err := m.From.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n29
	}
	return i, nil
}

func (m *OsoBuildTriggerPolicy) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *OsoBuildTriggerPolicy) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Type) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Type)))
		i += copy(data[i:], m.Type)
	}
	if m.GithubWebHook != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.GithubWebHook.Size()))
		n30, err := m.GithubWebHook.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n30
	}
	if m.GenericWebHook != nil {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(m.GenericWebHook.Size()))
		n31, err := m.GenericWebHook.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n31
	}
	if m.ImageChange != nil {
		data[i] = 0x22
		i++
		i = encodeVarintModel(data, i, uint64(m.ImageChange.Size()))
		n32, err := m.ImageChange.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n32
	}
	if m.OsoBuildTriggerType != 0 {
		data[i] = 0x28
		i++
		i = encodeVarintModel(data, i, uint64(m.OsoBuildTriggerType))
	}
	return i, nil
}

func (m *GenericWebHookCause) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *GenericWebHookCause) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Revision != nil {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(m.Revision.Size()))
		n33, err := m.Revision.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n33
	}
	if len(m.Secret) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Secret)))
		i += copy(data[i:], m.Secret)
	}
	return i, nil
}

func (m *GitHubWebHookCause) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *GitHubWebHookCause) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Revision != nil {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(m.Revision.Size()))
		n34, err := m.Revision.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n34
	}
	if len(m.Secret) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Secret)))
		i += copy(data[i:], m.Secret)
	}
	return i, nil
}

func (m *ImageChangeCause) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *ImageChangeCause) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ImageID) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.ImageID)))
		i += copy(data[i:], m.ImageID)
	}
	if m.FromRef != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.FromRef.Size()))
		n35, err := m.FromRef.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n35
	}
	return i, nil
}

func (m *OsoBuildTriggerCause) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *OsoBuildTriggerCause) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Message)))
		i += copy(data[i:], m.Message)
	}
	if m.GenericWebHook != nil {
		data[i] = 0x12
		i++
		i = encodeVarintModel(data, i, uint64(m.GenericWebHook.Size()))
		n36, err := m.GenericWebHook.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n36
	}
	if m.GithubWebHook != nil {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(m.GithubWebHook.Size()))
		n37, err := m.GithubWebHook.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n37
	}
	if m.ImageChangeBuild != nil {
		data[i] = 0x22
		i++
		i = encodeVarintModel(data, i, uint64(m.ImageChangeBuild.Size()))
		n38, err := m.ImageChangeBuild.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n38
	}
	return i, nil
}

func (m *OsoBuildStatus) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *OsoBuildStatus) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Phase) > 0 {
		data[i] = 0xa
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Phase)))
		i += copy(data[i:], m.Phase)
	}
	if m.Cancelled {
		data[i] = 0x10
		i++
		if m.Cancelled {
			data[i] = 1
		} else {
			data[i] = 0
		}
		i++
	}
	if len(m.Reason) > 0 {
		data[i] = 0x1a
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Reason)))
		i += copy(data[i:], m.Reason)
	}
	if len(m.Message) > 0 {
		data[i] = 0x22
		i++
		i = encodeVarintModel(data, i, uint64(len(m.Message)))
		i += copy(data[i:], m.Message)
	}
	if m.StartTimestamp != nil {
		data[i] = 0x2a
		i++
		i = encodeVarintModel(data, i, uint64(m.StartTimestamp.Size()))
		n39, err := m.StartTimestamp.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n39
	}
	if m.CompletionTimestamp != nil {
		data[i] = 0x32
		i++
		i = encodeVarintModel(data, i, uint64(m.CompletionTimestamp.Size()))
		n40, err := m.CompletionTimestamp.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n40
	}
	if m.Duration != 0 {
		data[i] = 0x38
		i++
		i = encodeVarintModel(data, i, uint64(m.Duration))
	}
	if len(m.OutputDockerImageReference) > 0 {
		data[i] = 0x42
		i++
		i = encodeVarintModel(data, i, uint64(len(m.OutputDockerImageReference)))
		i += copy(data[i:], m.OutputDockerImageReference)
	}
	if m.Config != nil {
		data[i] = 0x4a
		i++
		i = encodeVarintModel(data, i, uint64(m.Config.Size()))
		n41, err := m.Config.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n41
	}
	if m.OsoBuildPhase != 0 {
		data[i] = 0x50
		i++
		i = encodeVarintModel(data, i, uint64(m.OsoBuildPhase))
	}
	return i, nil
}

func encodeFixed64Model(data []byte, offset int, v uint64) int {
	data[offset] = uint8(v)
	data[offset+1] = uint8(v >> 8)
	data[offset+2] = uint8(v >> 16)
	data[offset+3] = uint8(v >> 24)
	data[offset+4] = uint8(v >> 32)
	data[offset+5] = uint8(v >> 40)
	data[offset+6] = uint8(v >> 48)
	data[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Model(data []byte, offset int, v uint32) int {
	data[offset] = uint8(v)
	data[offset+1] = uint8(v >> 8)
	data[offset+2] = uint8(v >> 16)
	data[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintModel(data []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		data[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	data[offset] = uint8(v)
	return offset + 1
}
func (m *SourceControlUser) Size() (n int) {
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *GitSourceRevision) Size() (n int) {
	var l int
	_ = l
	l = len(m.Commit)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Author != nil {
		l = m.Author.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Committer != nil {
		l = m.Committer.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *SourceRevision) Size() (n int) {
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Git != nil {
		l = m.Git.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.BuildSourceType != 0 {
		n += 1 + sovModel(uint64(m.BuildSourceType))
	}
	return n
}

func (m *BuildPostCommitSpec) Size() (n int) {
	var l int
	_ = l
	if len(m.Command) > 0 {
		for _, s := range m.Command {
			l = len(s)
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if len(m.Args) > 0 {
		for _, s := range m.Args {
			l = len(s)
			n += 1 + l + sovModel(uint64(l))
		}
	}
	l = len(m.Script)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *BuildOutput) Size() (n int) {
	var l int
	_ = l
	if m.To != nil {
		l = m.To.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.PushSecret != nil {
		l = m.PushSecret.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *JenkinsPipelineBuildStrategy) Size() (n int) {
	var l int
	_ = l
	l = len(m.JenkinsfilePath)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Jenkinsfile)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *SecretSpec) Size() (n int) {
	var l int
	_ = l
	if m.SecretSource != nil {
		l = m.SecretSource.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.MountPath)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *CustomBuildStrategy) Size() (n int) {
	var l int
	_ = l
	if m.From != nil {
		l = m.From.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.PullSecret != nil {
		l = m.PullSecret.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Env) > 0 {
		for _, e := range m.Env {
			l = e.Size()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.ExposeDockerSocket {
		n += 2
	}
	if m.ForcePull {
		n += 2
	}
	if len(m.Secrets) > 0 {
		for _, e := range m.Secrets {
			l = e.Size()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	l = len(m.BuildAPIVersion)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *SourceBuildStrategy) Size() (n int) {
	var l int
	_ = l
	if m.From != nil {
		l = m.From.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.PullSecret != nil {
		l = m.PullSecret.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Env) > 0 {
		for _, e := range m.Env {
			l = e.Size()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	l = len(m.Scripts)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Incremental {
		n += 2
	}
	if m.ForcePull {
		n += 2
	}
	return n
}

func (m *DockerBuildStrategy) Size() (n int) {
	var l int
	_ = l
	if m.From != nil {
		l = m.From.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.PullSecret != nil {
		l = m.PullSecret.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.NoCache {
		n += 2
	}
	if len(m.Env) > 0 {
		for _, e := range m.Env {
			l = e.Size()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.ForcePull {
		n += 2
	}
	l = len(m.DockerfilePath)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *BuildStrategy) Size() (n int) {
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.DockerStrategy != nil {
		l = m.DockerStrategy.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.SourceStrategy != nil {
		l = m.SourceStrategy.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CustomStrategy != nil {
		l = m.CustomStrategy.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.JenkinsPipelineStrategy != nil {
		l = m.JenkinsPipelineStrategy.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.OsoBuildStrategyType != 0 {
		n += 1 + sovModel(uint64(m.OsoBuildStrategyType))
	}
	return n
}

func (m *SecretBuildSource) Size() (n int) {
	var l int
	_ = l
	if m.Secret != nil {
		l = m.Secret.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DestinationDir)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *ImageSourcePath) Size() (n int) {
	var l int
	_ = l
	l = len(m.SourcePath)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DestinationDir)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *ImageSource) Size() (n int) {
	var l int
	_ = l
	if m.From != nil {
		l = m.From.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Paths) > 0 {
		for _, e := range m.Paths {
			l = e.Size()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.PullSecret != nil {
		l = m.PullSecret.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *GitBuildSource) Size() (n int) {
	var l int
	_ = l
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Ref)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.HttpProxy)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.HttpsProxy)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *BinaryBuildSource) Size() (n int) {
	var l int
	_ = l
	l = len(m.AsFile)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *BuildSource) Size() (n int) {
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Binary != nil {
		l = m.Binary.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Dockerfile)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Git != nil {
		l = m.Git.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Images) > 0 {
		for _, e := range m.Images {
			l = e.Size()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	l = len(m.ContextDir)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.SourceSecret != nil {
		l = m.SourceSecret.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Secrets) > 0 {
		for _, e := range m.Secrets {
			l = e.Size()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.OsoBuildSourceType != 0 {
		n += 1 + sovModel(uint64(m.OsoBuildSourceType))
	}
	return n
}

func (m *OsoCommonSpec) Size() (n int) {
	var l int
	_ = l
	l = len(m.ServiceAccount)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Source != nil {
		l = m.Source.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Revision != nil {
		l = m.Revision.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Strategy != nil {
		l = m.Strategy.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Output != nil {
		l = m.Output.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Resources != nil {
		l = m.Resources.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.PostCommit != nil {
		l = m.PostCommit.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CompletionDeadlineSeconds != 0 {
		n += 1 + sovModel(uint64(m.CompletionDeadlineSeconds))
	}
	return n
}

func (m *WebHookTrigger) Size() (n int) {
	var l int
	_ = l
	l = len(m.Secret)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.AllowEnv {
		n += 2
	}
	return n
}

func (m *ImageChangeTrigger) Size() (n int) {
	var l int
	_ = l
	l = len(m.LastTriggeredImageID)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.From != nil {
		l = m.From.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *OsoBuildTriggerPolicy) Size() (n int) {
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.GithubWebHook != nil {
		l = m.GithubWebHook.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.GenericWebHook != nil {
		l = m.GenericWebHook.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.ImageChange != nil {
		l = m.ImageChange.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.OsoBuildTriggerType != 0 {
		n += 1 + sovModel(uint64(m.OsoBuildTriggerType))
	}
	return n
}

func (m *GenericWebHookCause) Size() (n int) {
	var l int
	_ = l
	if m.Revision != nil {
		l = m.Revision.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Secret)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *GitHubWebHookCause) Size() (n int) {
	var l int
	_ = l
	if m.Revision != nil {
		l = m.Revision.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Secret)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *ImageChangeCause) Size() (n int) {
	var l int
	_ = l
	l = len(m.ImageID)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.FromRef != nil {
		l = m.FromRef.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *OsoBuildTriggerCause) Size() (n int) {
	var l int
	_ = l
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.GenericWebHook != nil {
		l = m.GenericWebHook.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.GithubWebHook != nil {
		l = m.GithubWebHook.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.ImageChangeBuild != nil {
		l = m.ImageChangeBuild.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *OsoBuildStatus) Size() (n int) {
	var l int
	_ = l
	l = len(m.Phase)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Cancelled {
		n += 2
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.StartTimestamp != nil {
		l = m.StartTimestamp.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CompletionTimestamp != nil {
		l = m.CompletionTimestamp.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Duration != 0 {
		n += 1 + sovModel(uint64(m.Duration))
	}
	l = len(m.OutputDockerImageReference)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.OsoBuildPhase != 0 {
		n += 1 + sovModel(uint64(m.OsoBuildPhase))
	}
	return n
}

func sovModel(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozModel(x uint64) (n int) {
	return sovModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SourceControlUser) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SourceControlUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SourceControlUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GitSourceRevision) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GitSourceRevision: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GitSourceRevision: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Commit = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Author == nil {
				m.Author = &SourceControlUser{}
			}
			if err := m.Author.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Committer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Committer == nil {
				m.Committer = &SourceControlUser{}
			}
			if err := m.Committer.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SourceRevision) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SourceRevision: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SourceRevision: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Git", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Git == nil {
				m.Git = &GitSourceRevision{}
			}
			if err := m.Git.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildSourceType", wireType)
			}
			m.BuildSourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.BuildSourceType |= (OsoBuildSourceType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildPostCommitSpec) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildPostCommitSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildPostCommitSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Command", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Command = append(m.Command, string(data[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Args", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Args = append(m.Args, string(data[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Script", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Script = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildOutput) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildOutput: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildOutput: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.To == nil {
				m.To = &k8s_io_kubernetes_pkg_api_v1.ObjectReference{}
			}
			if err := m.To.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushSecret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PushSecret == nil {
				m.PushSecret = &k8s_io_kubernetes_pkg_api_v1.LocalObjectReference{}
			}
			if err := m.PushSecret.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JenkinsPipelineBuildStrategy) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: JenkinsPipelineBuildStrategy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: JenkinsPipelineBuildStrategy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JenkinsfilePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JenkinsfilePath = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Jenkinsfile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Jenkinsfile = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SecretSpec) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SecretSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SecretSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecretSource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SecretSource == nil {
				m.SecretSource = &k8s_io_kubernetes_pkg_api_v1.LocalObjectReference{}
			}
			if err := m.SecretSource.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MountPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MountPath = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CustomBuildStrategy) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CustomBuildStrategy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CustomBuildStrategy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.From == nil {
				m.From = &k8s_io_kubernetes_pkg_api_v1.ObjectReference{}
			}
			if err := m.From.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullSecret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PullSecret == nil {
				m.PullSecret = &k8s_io_kubernetes_pkg_api_v1.LocalObjectReference{}
			}
			if err := m.PullSecret.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Env", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Env = append(m.Env, &k8s_io_kubernetes_pkg_api_v1.EnvVar{})
			if err := m.Env[len(m.Env)-1].Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExposeDockerSocket", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExposeDockerSocket = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForcePull", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForcePull = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secrets", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secrets = append(m.Secrets, &SecretSpec{})
			if err := m.Secrets[len(m.Secrets)-1].Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildAPIVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuildAPIVersion = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SourceBuildStrategy) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SourceBuildStrategy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SourceBuildStrategy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.From == nil {
				m.From = &k8s_io_kubernetes_pkg_api_v1.ObjectReference{}
			}
			if err := m.From.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullSecret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PullSecret == nil {
				m.PullSecret = &k8s_io_kubernetes_pkg_api_v1.LocalObjectReference{}
			}
			if err := m.PullSecret.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Env", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Env = append(m.Env, &k8s_io_kubernetes_pkg_api_v1.EnvVar{})
			if err := m.Env[len(m.Env)-1].Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scripts", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scripts = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Incremental", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Incremental = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForcePull", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForcePull = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DockerBuildStrategy) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DockerBuildStrategy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DockerBuildStrategy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.From == nil {
				m.From = &k8s_io_kubernetes_pkg_api_v1.ObjectReference{}
			}
			if err := m.From.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullSecret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PullSecret == nil {
				m.PullSecret = &k8s_io_kubernetes_pkg_api_v1.LocalObjectReference{}
			}
			if err := m.PullSecret.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoCache", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoCache = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Env", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Env = append(m.Env, &k8s_io_kubernetes_pkg_api_v1.EnvVar{})
			if err := m.Env[len(m.Env)-1].Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForcePull", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForcePull = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DockerfilePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DockerfilePath = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildStrategy) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildStrategy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildStrategy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DockerStrategy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DockerStrategy == nil {
				m.DockerStrategy = &DockerBuildStrategy{}
			}
			if err := m.DockerStrategy.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceStrategy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SourceStrategy == nil {
				m.SourceStrategy = &SourceBuildStrategy{}
			}
			if err := m.SourceStrategy.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomStrategy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CustomStrategy == nil {
				m.CustomStrategy = &CustomBuildStrategy{}
			}
			if err := m.CustomStrategy.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JenkinsPipelineStrategy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JenkinsPipelineStrategy == nil {
				m.JenkinsPipelineStrategy = &JenkinsPipelineBuildStrategy{}
			}
			if err := m.JenkinsPipelineStrategy.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsoBuildStrategyType", wireType)
			}
			m.OsoBuildStrategyType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.OsoBuildStrategyType |= (BuildStrategy_OsoBuildStrategyType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SecretBuildSource) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SecretBuildSource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SecretBuildSource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Secret == nil {
				m.Secret = &k8s_io_kubernetes_pkg_api_v1.LocalObjectReference{}
			}
			if err := m.Secret.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationDir", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestinationDir = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ImageSourcePath) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ImageSourcePath: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ImageSourcePath: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourcePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourcePath = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationDir", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestinationDir = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ImageSource) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ImageSource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ImageSource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.From == nil {
				m.From = &k8s_io_kubernetes_pkg_api_v1.ObjectReference{}
			}
			if err := m.From.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Paths", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Paths = append(m.Paths, &ImageSourcePath{})
			if err := m.Paths[len(m.Paths)-1].Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullSecret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PullSecret == nil {
				m.PullSecret = &k8s_io_kubernetes_pkg_api_v1.LocalObjectReference{}
			}
			if err := m.PullSecret.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GitBuildSource) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GitBuildSource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GitBuildSource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ref", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ref = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HttpProxy = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpsProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HttpsProxy = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BinaryBuildSource) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BinaryBuildSource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BinaryBuildSource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AsFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AsFile = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildSource) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildSource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildSource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Binary", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Binary == nil {
				m.Binary = &BinaryBuildSource{}
			}
			if err := m.Binary.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dockerfile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Dockerfile = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Git", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Git == nil {
				m.Git = &GitBuildSource{}
			}
			if err := m.Git.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Images = append(m.Images, &ImageSource{})
			if err := m.Images[len(m.Images)-1].Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextDir", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContextDir = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceSecret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SourceSecret == nil {
				m.SourceSecret = &k8s_io_kubernetes_pkg_api_v1.LocalObjectReference{}
			}
			if err := m.SourceSecret.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secrets", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secrets = append(m.Secrets, &SecretBuildSource{})
			if err := m.Secrets[len(m.Secrets)-1].Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsoBuildSourceType", wireType)
			}
			m.OsoBuildSourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.OsoBuildSourceType |= (OsoBuildSourceType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OsoCommonSpec) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OsoCommonSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OsoCommonSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceAccount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceAccount = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Source == nil {
				m.Source = &BuildSource{}
			}
			if err := m.Source.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Revision == nil {
				m.Revision = &SourceRevision{}
			}
			if err := m.Revision.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Strategy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Strategy == nil {
				m.Strategy = &BuildStrategy{}
			}
			if err := m.Strategy.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Output", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Output == nil {
				m.Output = &BuildOutput{}
			}
			if err := m.Output.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Resources == nil {
				m.Resources = &k8s_io_kubernetes_pkg_api_v1.ResourceRequirements{}
			}
			if err := m.Resources.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostCommit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PostCommit == nil {
				m.PostCommit = &BuildPostCommitSpec{}
			}
			if err := m.PostCommit.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletionDeadlineSeconds", wireType)
			}
			m.CompletionDeadlineSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.CompletionDeadlineSeconds |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebHookTrigger) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebHookTrigger: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebHookTrigger: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secret = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowEnv", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowEnv = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ImageChangeTrigger) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ImageChangeTrigger: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ImageChangeTrigger: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTriggeredImageID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastTriggeredImageID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.From == nil {
				m.From = &k8s_io_kubernetes_pkg_api_v1.ObjectReference{}
			}
			if err := m.From.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OsoBuildTriggerPolicy) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OsoBuildTriggerPolicy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OsoBuildTriggerPolicy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GithubWebHook", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GithubWebHook == nil {
				m.GithubWebHook = &WebHookTrigger{}
			}
			if err := m.GithubWebHook.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenericWebHook", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GenericWebHook == nil {
				m.GenericWebHook = &WebHookTrigger{}
			}
			if err := m.GenericWebHook.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageChange", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ImageChange == nil {
				m.ImageChange = &ImageChangeTrigger{}
			}
			if err := m.ImageChange.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsoBuildTriggerType", wireType)
			}
			m.OsoBuildTriggerType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.OsoBuildTriggerType |= (OsoBuildTriggerPolicy_OsoBuildTriggerType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenericWebHookCause) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenericWebHookCause: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenericWebHookCause: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Revision == nil {
				m.Revision = &SourceRevision{}
			}
			if err := m.Revision.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secret = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GitHubWebHookCause) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GitHubWebHookCause: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GitHubWebHookCause: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Revision == nil {
				m.Revision = &SourceRevision{}
			}
			if err := m.Revision.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secret = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ImageChangeCause) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ImageChangeCause: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ImageChangeCause: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageID = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromRef == nil {
				m.FromRef = &k8s_io_kubernetes_pkg_api_v1.ObjectReference{}
			}
			if err := m.FromRef.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OsoBuildTriggerCause) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OsoBuildTriggerCause: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OsoBuildTriggerCause: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenericWebHook", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GenericWebHook == nil {
				m.GenericWebHook = &GenericWebHookCause{}
			}
			if err := m.GenericWebHook.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GithubWebHook", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GithubWebHook == nil {
				m.GithubWebHook = &GitHubWebHookCause{}
			}
			if err := m.GithubWebHook.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageChangeBuild", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ImageChangeBuild == nil {
				m.ImageChangeBuild = &ImageChangeCause{}
			}
			if err := m.ImageChangeBuild.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OsoBuildStatus) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OsoBuildStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OsoBuildStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phase", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phase = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cancelled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Cancelled = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTimestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartTimestamp == nil {
				m.StartTimestamp = &k8s_io_kubernetes_pkg_api_unversioned.Time{}
			}
			if err := m.StartTimestamp.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletionTimestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CompletionTimestamp == nil {
				m.CompletionTimestamp = &k8s_io_kubernetes_pkg_api_unversioned.Time{}
			}
			if err := m.CompletionTimestamp.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.Duration |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutputDockerImageReference", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutputDockerImageReference = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &k8s_io_kubernetes_pkg_api_v1.ObjectReference{}
			}
			if err := m.Config.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsoBuildPhase", wireType)
			}
			m.OsoBuildPhase = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				m.OsoBuildPhase |= (OsoBuildStatus_OsoBuildPhase(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipModel(data []byte) (n int, err error) {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if data[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthModel
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowModel
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := data[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipModel(data[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthModel = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowModel   = fmt.Errorf("proto: integer overflow")
)

var fileDescriptorModel = []byte{
	// 1992 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xdc, 0x59, 0xcd, 0x73, 0x1b, 0x49,
	0x15, 0x5f, 0x79, 0x6c, 0x59, 0x7a, 0x8e, 0x65, 0xa5, 0x1d, 0x16, 0xe1, 0x0d, 0x26, 0x3b, 0x4b,
	0x51, 0x61, 0x37, 0xc8, 0xac, 0xc3, 0x52, 0x04, 0x58, 0xa8, 0x58, 0xce, 0xd7, 0x6e, 0x48, 0x44,
	0x3b, 0x84, 0x02, 0x8a, 0xc3, 0x68, 0xd4, 0x92, 0x26, 0x1e, 0x4d, 0xcf, 0x4e, 0xcf, 0x38, 0xf1,
	0x95, 0x0b, 0x45, 0x71, 0xa3, 0x8a, 0x2a, 0x8e, 0xdc, 0x38, 0xf0, 0x3f, 0x40, 0x51, 0xc5, 0x81,
	0x23, 0x77, 0x2e, 0x14, 0x5c, 0xe1, 0x7f, 0xe0, 0xf5, 0xc7, 0x7c, 0x6a, 0x24, 0xe2, 0x10, 0x0e,
	0x70, 0xb0, 0x6b, 0xfa, 0xcd, 0x7b, 0xbf, 0xee, 0x7e, 0xef, 0xf5, 0x7b, 0xbf, 0x1e, 0xc1, 0x5e,
	0xe8, 0x38, 0xe2, 0xc0, 0xf5, 0x0e, 0xb8, 0xe0, 0xe1, 0xe8, 0xe6, 0xc1, 0x9c, 0x8f, 0x99, 0xdf,
	0x0f, 0x23, 0x1e, 0x73, 0xd2, 0x91, 0xef, 0xfa, 0xae, 0xd7, 0xd7, 0xef, 0xf6, 0xae, 0x4e, 0x39,
	0x9f, 0xfa, 0xec, 0xc0, 0x09, 0xbd, 0x03, 0x27, 0x08, 0x78, 0xec, 0xc4, 0x1e, 0x0f, 0x84, 0xd6,
	0xde, 0xfb, 0xe0, 0xf4, 0x6b, 0xa2, 0xef, 0xf1, 0x83, 0xd3, 0x64, 0xc4, 0xa2, 0x80, 0xc5, 0x4c,
	0x1c, 0x84, 0xa7, 0x53, 0xa5, 0x9c, 0x04, 0x67, 0x2c, 0x12, 0xa8, 0xcb, 0xc6, 0x07, 0x53, 0x16,
	0xb0, 0xc8, 0x89, 0xd9, 0xd8, 0x98, 0xdd, 0x58, 0x6e, 0x76, 0xf6, 0x7e, 0x55, 0xdb, 0xfe, 0x10,
	0x2e, 0x9f, 0xf0, 0x24, 0x72, 0xd9, 0x80, 0x07, 0x71, 0xc4, 0xfd, 0xef, 0x09, 0x16, 0x11, 0x02,
	0xeb, 0x81, 0x33, 0x67, 0xbd, 0xc6, 0xb5, 0xc6, 0xf5, 0x36, 0x55, 0xcf, 0xe4, 0x0a, 0x6c, 0xb0,
	0xb9, 0xe3, 0xf9, 0xbd, 0x35, 0x25, 0xd4, 0x03, 0xfb, 0x0f, 0x0d, 0xb8, 0x7c, 0xcf, 0x8b, 0x35,
	0x04, 0x65, 0x67, 0x9e, 0x5c, 0x14, 0x79, 0x13, 0x9a, 0x2e, 0x9f, 0xcf, 0xbd, 0xd8, 0x20, 0x98,
	0x11, 0xb9, 0x05, 0x4d, 0x27, 0x89, 0x67, 0x3c, 0x52, 0x20, 0x5b, 0x87, 0x6f, 0xf7, 0xcb, 0x0e,
	0xe9, 0x2f, 0x2c, 0x85, 0x1a, 0x03, 0xf2, 0x6d, 0x68, 0x6b, 0x90, 0x98, 0x45, 0x3d, 0xeb, 0x65,
	0xad, 0x73, 0x1b, 0xd2, 0x83, 0xcd, 0x39, 0x13, 0xc2, 0x99, 0xb2, 0xde, 0xba, 0x5a, 0x54, 0x3a,
	0xb4, 0x7f, 0xd3, 0x80, 0x4e, 0x65, 0x03, 0xe8, 0x80, 0xf8, 0x3c, 0xcc, 0x1c, 0x20, 0x9f, 0xc9,
	0x4d, 0xb0, 0xa6, 0xb8, 0xa3, 0x25, 0x2b, 0x5f, 0x70, 0x02, 0x95, 0xda, 0xe4, 0x21, 0xec, 0x8c,
	0x12, 0xcf, 0x1f, 0xeb, 0x77, 0x4f, 0x24, 0xa6, 0x5c, 0x7c, 0xe7, 0xd0, 0xae, 0x02, 0x3c, 0x16,
	0xfc, 0xa8, 0xac, 0x49, 0xab, 0xa6, 0xf6, 0x8f, 0x60, 0x57, 0xe9, 0x0c, 0xb9, 0x88, 0x07, 0x6a,
	0x67, 0x27, 0x21, 0x73, 0xe5, 0xd6, 0xe4, 0x3e, 0x9d, 0x60, 0x8c, 0x0b, 0xb6, 0xe4, 0xd6, 0xcc,
	0x50, 0xee, 0xc3, 0x89, 0xa6, 0x02, 0x17, 0x2d, 0xc5, 0xea, 0x59, 0x06, 0x47, 0xb8, 0x91, 0x17,
	0xc6, 0x6a, 0x25, 0x18, 0x1c, 0x3d, 0xb2, 0x7f, 0xdd, 0x80, 0x2d, 0x85, 0xfe, 0x38, 0x89, 0xc3,
	0x24, 0x26, 0x1f, 0xc2, 0x5a, 0xcc, 0x95, 0x07, 0xb6, 0x0e, 0xbf, 0xd4, 0xd7, 0x49, 0xd5, 0xcf,
	0x93, 0xaa, 0x8f, 0x49, 0xd5, 0xc7, 0xa4, 0xea, 0x9f, 0xbd, 0xdf, 0x7f, 0x3c, 0x7a, 0xc6, 0xdc,
	0x98, 0xb2, 0x09, 0x8b, 0x58, 0x80, 0x2e, 0x40, 0x43, 0x42, 0x01, 0xc2, 0x44, 0xcc, 0x4e, 0x98,
	0x1b, 0xb1, 0xd4, 0x6b, 0x87, 0xab, 0x61, 0x1e, 0x72, 0xd7, 0xf1, 0xab, 0x58, 0x05, 0x14, 0xfb,
	0x19, 0x5c, 0xfd, 0x88, 0x05, 0xa7, 0x5e, 0x20, 0x86, 0x5e, 0xc8, 0x7c, 0x2f, 0x60, 0xda, 0x65,
	0xb1, 0xcc, 0xe8, 0xe9, 0x39, 0xb9, 0x0e, 0x3b, 0xcf, 0xf4, 0xfb, 0x89, 0xe7, 0xb3, 0xa1, 0x13,
	0xcf, 0x4c, 0x04, 0xab, 0x62, 0x72, 0x0d, 0xb6, 0x0a, 0x22, 0x93, 0xd3, 0x45, 0x91, 0xfd, 0x93,
	0x06, 0x80, 0x9e, 0x56, 0xf9, 0xf8, 0x29, 0x5c, 0x12, 0x7a, 0xa4, 0xc2, 0x61, 0xfc, 0xf2, 0x2a,
	0x1b, 0x2a, 0xe1, 0x90, 0xab, 0xd0, 0x9e, 0xf3, 0x24, 0x88, 0xd5, 0x62, 0xf5, 0x32, 0x72, 0x81,
	0xfd, 0x0b, 0x0b, 0x76, 0x07, 0x89, 0x88, 0xf9, 0xbc, 0xbc, 0xd1, 0xdb, 0xb0, 0x3e, 0x89, 0xf8,
	0xfc, 0xd5, 0xa2, 0xa3, 0x4c, 0x75, 0x7c, 0x7c, 0xff, 0x75, 0xc4, 0x27, 0x45, 0x21, 0x5f, 0x05,
	0x8b, 0x05, 0x67, 0x98, 0x57, 0x16, 0x82, 0x7d, 0x7e, 0x35, 0xd8, 0x9d, 0xe0, 0xec, 0xa9, 0x13,
	0x51, 0x69, 0x40, 0xfa, 0x40, 0xd8, 0x8b, 0x90, 0x0b, 0x76, 0xcc, 0xdd, 0x53, 0x16, 0x9d, 0xc8,
	0xff, 0xb1, 0x3a, 0xa6, 0x2d, 0x5a, 0xf3, 0x46, 0x3a, 0x6d, 0xc2, 0xd1, 0x7b, 0x43, 0x9c, 0xba,
	0xb7, 0xa1, 0xd4, 0x72, 0x01, 0xf9, 0x0a, 0x6c, 0x6a, 0x17, 0x8b, 0x5e, 0x53, 0xad, 0x64, 0x6f,
	0xa1, 0x50, 0x64, 0x71, 0xa5, 0xa9, 0xaa, 0xcc, 0x1d, 0x75, 0xdc, 0x6e, 0x0f, 0x1f, 0x3c, 0xd5,
	0xb5, 0xb5, 0xb7, 0xa9, 0x73, 0xa7, 0x22, 0xb6, 0x7f, 0xb7, 0x06, 0xbb, 0x3a, 0x7a, 0xff, 0xd7,
	0x41, 0xc1, 0xaa, 0xa2, 0x2b, 0x83, 0x48, 0x0b, 0xa6, 0x19, 0xca, 0xc3, 0xe3, 0x05, 0x88, 0x3d,
	0x67, 0x41, 0xec, 0xa4, 0x01, 0x28, 0x8a, 0xca, 0x01, 0x6a, 0x56, 0x02, 0x64, 0xff, 0x11, 0x1d,
	0xa8, 0xe3, 0xf9, 0x3f, 0xe1, 0x40, 0x74, 0x44, 0xc0, 0x07, 0x8e, 0x3b, 0xd3, 0xb5, 0xbb, 0x45,
	0xd3, 0x61, 0xea, 0xda, 0xf5, 0x8b, 0xba, 0x76, 0x75, 0xfe, 0x7e, 0x01, 0x3a, 0x63, 0xe5, 0x9d,
	0xac, 0x88, 0x35, 0x95, 0xff, 0x2b, 0x52, 0xfb, 0xb7, 0xeb, 0xb0, 0x5d, 0x76, 0x60, 0x5d, 0xdb,
	0xfa, 0x38, 0x45, 0x4b, 0xb5, 0x8c, 0x57, 0xde, 0xa9, 0x1e, 0x8a, 0x9a, 0x88, 0xd0, 0x8a, 0xa9,
	0x04, 0x13, 0x2a, 0xf3, 0x33, 0x30, 0xab, 0x1e, 0xac, 0xe6, 0x7c, 0xd0, 0x8a, 0xa9, 0x04, 0x73,
	0x55, 0x6d, 0xcb, 0xc0, 0xd6, 0xeb, 0xc1, 0x6a, 0x2a, 0x20, 0xad, 0x98, 0x92, 0x09, 0x7c, 0xfa,
	0x59, 0xb9, 0x35, 0x64, 0xa8, 0x1b, 0x0a, 0xf5, 0x46, 0x15, 0x75, 0x55, 0x27, 0xa1, 0xcb, 0xc0,
	0x70, 0x9e, 0x2b, 0x3c, 0xed, 0xd4, 0x46, 0xa6, 0xba, 0x7a, 0x53, 0x75, 0xf5, 0xc3, 0xea, 0x24,
	0x25, 0xc5, 0xbc, 0xc7, 0x17, 0x2c, 0x69, 0x2d, 0x9e, 0xfd, 0x18, 0xae, 0xd4, 0x69, 0x13, 0x80,
	0xa6, 0x0e, 0x54, 0xf7, 0x0d, 0xf9, 0xac, 0xfd, 0xdc, 0x6d, 0xc8, 0x67, 0xed, 0xa6, 0xee, 0x1a,
	0xd9, 0x85, 0x9d, 0xca, 0xe6, 0xba, 0x96, 0xfd, 0x53, 0x64, 0x6a, 0x3a, 0xa1, 0x0b, 0x34, 0x83,
	0x7c, 0x84, 0x64, 0x40, 0x9f, 0x95, 0x57, 0x6f, 0x68, 0x06, 0x41, 0xe5, 0x2d, 0x13, 0xb1, 0x17,
	0x28, 0x16, 0x7b, 0xec, 0x45, 0xa6, 0x9f, 0x55, 0xa4, 0xf6, 0x0f, 0x60, 0xe7, 0xc1, 0x1c, 0x89,
	0x97, 0x5e, 0x82, 0x6a, 0xc7, 0xfb, 0x00, 0x22, 0x1b, 0x99, 0xf4, 0x2d, 0x48, 0x5e, 0x1a, 0xfa,
	0x2f, 0xc8, 0x61, 0x0a, 0xd8, 0xaf, 0xa3, 0xa2, 0x7c, 0x00, 0x1b, 0x21, 0x2e, 0x41, 0x73, 0xa8,
	0xad, 0xc3, 0xcf, 0x55, 0x23, 0x5c, 0xd9, 0x0a, 0xd5, 0xda, 0x95, 0x42, 0x64, 0xbd, 0x8e, 0x42,
	0x64, 0x47, 0xd0, 0x41, 0x9a, 0x59, 0x0c, 0x5f, 0x17, 0xac, 0x24, 0xf2, 0x8c, 0xc3, 0xe4, 0xa3,
	0x94, 0x44, 0x6c, 0x62, 0xdc, 0x23, 0x1f, 0x65, 0xb1, 0x99, 0xc5, 0x71, 0x38, 0x8c, 0xf8, 0x8b,
	0x73, 0x43, 0xf9, 0x72, 0x81, 0xf4, 0xbc, 0x1c, 0x08, 0xfd, 0x5a, 0x17, 0xfa, 0x82, 0xc4, 0x7e,
	0x0f, 0x2e, 0x1f, 0xa1, 0x83, 0xa3, 0xf3, 0xe2, 0xb4, 0x48, 0x21, 0x1d, 0x71, 0x57, 0x12, 0x27,
	0xc3, 0xef, 0xf5, 0xc8, 0xfe, 0x87, 0x65, 0x28, 0xa4, 0xd1, 0xab, 0xab, 0x47, 0x78, 0x07, 0x18,
	0x29, 0xc0, 0x65, 0x4c, 0x7a, 0x61, 0x3a, 0x6a, 0x0c, 0xe4, 0x5a, 0xf3, 0x12, 0x68, 0xb6, 0x52,
	0x90, 0x90, 0x2f, 0x6b, 0x86, 0xae, 0xab, 0xc8, 0x7e, 0x0d, 0x43, 0x2f, 0x82, 0x2a, 0x7a, 0x7e,
	0x13, 0x9a, 0x9e, 0x8c, 0x9f, 0xc0, 0x22, 0x21, 0xa3, 0xfb, 0xd6, 0x8a, 0xe8, 0x52, 0xa3, 0x2a,
	0x97, 0xe1, 0xe2, 0x1d, 0x83, 0xbd, 0x88, 0x65, 0x22, 0xea, 0xda, 0x5c, 0x90, 0x28, 0xaa, 0xa8,
	0x2b, 0x9d, 0x0e, 0xfe, 0xe6, 0x7f, 0x40, 0x15, 0x0b, 0x38, 0xe4, 0x1b, 0x39, 0xaf, 0x69, 0xa9,
	0xd5, 0xbe, 0x5d, 0xcf, 0x6b, 0x8a, 0xbb, 0xcc, 0xe8, 0x0d, 0x05, 0xc2, 0x17, 0x6e, 0x18, 0xbd,
	0xf6, 0x4b, 0xdf, 0x45, 0x6a, 0xac, 0xed, 0x7f, 0x5a, 0xb0, 0x8d, 0xaa, 0xf2, 0x26, 0xc2, 0x03,
	0xc5, 0x92, 0xf1, 0x9c, 0xe2, 0xb5, 0xeb, 0xcc, 0x73, 0xd9, 0x6d, 0xd7, 0x95, 0x2c, 0xd6, 0x84,
	0xbe, 0x22, 0x95, 0x7e, 0xd7, 0x5b, 0x33, 0x49, 0xf0, 0x56, 0x7d, 0xdd, 0x34, 0x7e, 0xd7, 0xaa,
	0xe4, 0xeb, 0xd0, 0x8a, 0xcc, 0xe5, 0xca, 0x1c, 0xa8, 0xfd, 0xfa, 0xb6, 0x93, 0x5d, 0xc1, 0x32,
	0x7d, 0xcc, 0xba, 0x96, 0x28, 0x77, 0x99, 0xcf, 0xae, 0x2c, 0xd5, 0x34, 0x53, 0x97, 0x6b, 0xe5,
	0xea, 0x46, 0x64, 0x1a, 0x49, 0xfd, 0x5a, 0xf5, 0xa5, 0x89, 0x1a, 0x55, 0x32, 0x84, 0x76, 0xc4,
	0xf4, 0xba, 0x85, 0x4a, 0x91, 0x7f, 0x9b, 0x00, 0xd4, 0xa8, 0x53, 0xf6, 0x49, 0xe2, 0x69, 0x22,
	0x25, 0x68, 0x0e, 0x42, 0x06, 0x58, 0x50, 0xb2, 0x6b, 0x9f, 0xc9, 0xa9, 0x77, 0x6a, 0x97, 0x52,
	0xbe, 0x1d, 0xd2, 0x82, 0x19, 0xf9, 0x26, 0x7c, 0x06, 0xaf, 0x86, 0xa1, 0xcf, 0x54, 0xc1, 0x64,
	0xce, 0x58, 0xf5, 0x36, 0x86, 0xc9, 0x3b, 0x96, 0x49, 0xd5, 0xb8, 0x6e, 0xd1, 0xe5, 0x0a, 0xf6,
	0x31, 0x74, 0xbe, 0xcf, 0x46, 0xf7, 0x39, 0x3f, 0x7d, 0x12, 0x79, 0xd3, 0x29, 0x5e, 0xaa, 0xdf,
	0x2c, 0xb5, 0x8f, 0x76, 0xd6, 0x0a, 0xf6, 0xa0, 0xe5, 0xf8, 0x3e, 0x7f, 0x8e, 0xa4, 0x47, 0x45,
	0xb8, 0x45, 0xb3, 0xb1, 0xfd, 0xf3, 0x06, 0x10, 0x75, 0xac, 0x06, 0x33, 0x27, 0x98, 0xb2, 0x14,
	0xea, 0x10, 0xae, 0xf8, 0x8e, 0x88, 0xcd, 0x90, 0x8d, 0x95, 0xca, 0x83, 0x63, 0x03, 0x5c, 0xfb,
	0x2e, 0x2b, 0xef, 0x6b, 0xaf, 0x5c, 0xde, 0xed, 0xdf, 0x5b, 0xf0, 0xa9, 0x34, 0xdd, 0x0d, 0xfe,
	0x90, 0xfb, 0x9e, 0x5b, 0x4f, 0xa6, 0x8e, 0x61, 0x1b, 0xcb, 0xc6, 0x2c, 0x19, 0x19, 0x3f, 0x98,
	0x99, 0x17, 0xf2, 0xb0, 0xec, 0x26, 0x5a, 0x36, 0x22, 0x77, 0xa1, 0xa3, 0x3e, 0xc3, 0x78, 0x6e,
	0x0a, 0x63, 0xbd, 0x14, 0x4c, 0xc5, 0x0a, 0x57, 0xb3, 0xe5, 0xe5, 0x8e, 0x34, 0x79, 0x6d, 0xd7,
	0x96, 0xb0, 0x92, 0xaf, 0x69, 0xd1, 0x8c, 0x9c, 0xc2, 0x2e, 0x2f, 0x3b, 0x40, 0x95, 0x86, 0x0d,
	0x55, 0x1a, 0x6e, 0x2d, 0x2b, 0x0d, 0x25, 0x5f, 0x55, 0xa5, 0xaa, 0x62, 0xd4, 0xa1, 0xda, 0xdf,
	0x85, 0xdd, 0x1a, 0x5d, 0xc9, 0x5e, 0xb0, 0x3c, 0xdf, 0x4f, 0x46, 0xc8, 0x6a, 0xb6, 0x60, 0xf3,
	0x9e, 0xde, 0x27, 0xd2, 0x9a, 0x1d, 0xd3, 0xcf, 0xf5, 0x5a, 0x91, 0xdb, 0x74, 0xe1, 0xd2, 0x80,
	0x07, 0x13, 0x6f, 0x6a, 0x24, 0x96, 0xed, 0xc1, 0xee, 0xbd, 0x92, 0x5f, 0x06, 0x4e, 0x22, 0xca,
	0xd5, 0xa2, 0x71, 0xc1, 0x6a, 0x91, 0xa7, 0xf5, 0x5a, 0x31, 0xad, 0xed, 0x19, 0x10, 0xbd, 0xcc,
	0xff, 0xfa, 0x4c, 0x09, 0x74, 0x0b, 0xfb, 0xd6, 0xf3, 0xe0, 0x3d, 0xc4, 0x2b, 0x1d, 0x8a, 0x74,
	0x48, 0xee, 0xc1, 0xa6, 0x4c, 0x66, 0x6a, 0x1a, 0xff, 0x85, 0x8f, 0x42, 0x6a, 0x6d, 0xff, 0x72,
	0x2d, 0xa7, 0x9d, 0x26, 0x3e, 0xd9, 0xdc, 0xe9, 0xd7, 0xb3, 0x46, 0xe9, 0xeb, 0x99, 0x64, 0xf1,
	0x95, 0x64, 0x5e, 0x72, 0xbf, 0xa8, 0x09, 0xd2, 0x42, 0x46, 0xdf, 0xaf, 0x9e, 0x2f, 0xab, 0x3e,
	0xa7, 0x17, 0xa3, 0x50, 0x3d, 0x63, 0x0f, 0xa1, 0x5b, 0x48, 0x72, 0xb5, 0x21, 0x73, 0x40, 0xae,
	0xad, 0x38, 0x20, 0x1a, 0x6a, 0xc1, 0xd2, 0xfe, 0xd9, 0x06, 0x74, 0x72, 0x3a, 0xee, 0xc4, 0x89,
	0x90, 0xdf, 0x43, 0xc3, 0x99, 0x23, 0x52, 0x7f, 0xe8, 0x81, 0x24, 0x5b, 0xae, 0x83, 0x2e, 0xf5,
	0x7d, 0x36, 0x36, 0x95, 0x2f, 0x17, 0xc8, 0x68, 0x47, 0xcc, 0x11, 0xa6, 0x7f, 0x61, 0xb4, 0xf5,
	0x68, 0xf9, 0xb7, 0x49, 0x72, 0x82, 0x0d, 0x35, 0x76, 0xa2, 0xf8, 0x89, 0x87, 0x92, 0xd8, 0x99,
	0x87, 0xa6, 0x09, 0xbd, 0xb7, 0x22, 0xc0, 0x85, 0x8f, 0xc3, 0x7d, 0x69, 0x47, 0x2b, 0x10, 0xe4,
	0xc7, 0xb0, 0x9b, 0x17, 0xf9, 0x1c, 0xb9, 0x79, 0x71, 0xe4, 0x3a, 0x1c, 0x59, 0xfc, 0xc7, 0x49,
	0xa4, 0x38, 0xb9, 0xea, 0x53, 0x16, 0xcd, 0xc6, 0xe4, 0x5b, 0xb0, 0xa7, 0x3b, 0xa4, 0xbe, 0xc4,
	0x28, 0xd7, 0x67, 0x79, 0xa8, 0x3a, 0x50, 0x9b, 0xae, 0xd0, 0x20, 0x77, 0xe4, 0x97, 0x65, 0x79,
	0xfc, 0x15, 0x75, 0xb9, 0x70, 0xa2, 0x1b, 0x63, 0x64, 0x43, 0xdb, 0x69, 0x75, 0x1a, 0xaa, 0x20,
	0x82, 0xaa, 0x76, 0x37, 0x96, 0x12, 0x21, 0x15, 0xf3, 0x6c, 0xa8, 0x6c, 0x68, 0x19, 0xc2, 0x9e,
	0x28, 0x32, 0x94, 0x0b, 0xc8, 0x26, 0x58, 0x8f, 0xd8, 0x73, 0x5d, 0xd1, 0x86, 0x2c, 0x18, 0x7b,
	0xc1, 0x14, 0x2b, 0x1a, 0x0e, 0x68, 0x12, 0x04, 0x72, 0xb0, 0x46, 0x2e, 0x41, 0x6b, 0xa0, 0x3d,
	0x88, 0x95, 0x4c, 0x56, 0xc1, 0xbb, 0x0e, 0x12, 0xd9, 0x71, 0x77, 0x9d, 0xb4, 0x61, 0xe3, 0x4e,
	0x14, 0xf1, 0xa8, 0xbb, 0x41, 0xb6, 0xa1, 0x3d, 0x48, 0x53, 0xa8, 0xdb, 0x7c, 0xf7, 0x11, 0x90,
	0x45, 0x7e, 0x26, 0x27, 0xc3, 0x43, 0x81, 0x93, 0x75, 0x00, 0x8e, 0x33, 0x4a, 0xac, 0x2f, 0x86,
	0x9a, 0x51, 0xe3, 0x74, 0x08, 0xaa, 0xfc, 0x89, 0x73, 0xb5, 0x60, 0xfd, 0x11, 0xc6, 0xb1, 0xbb,
	0xfe, 0xee, 0xad, 0x1c, 0x4f, 0x93, 0x98, 0x8f, 0x3d, 0xf5, 0xe5, 0xb8, 0xa3, 0xb9, 0x6f, 0x8c,
	0x39, 0x3a, 0x7f, 0xe2, 0x4c, 0x11, 0x1a, 0x8b, 0x71, 0x21, 0x28, 0xdd, 0xc6, 0xd1, 0xa3, 0x3f,
	0xfd, 0x6d, 0xbf, 0xf1, 0x67, 0xfc, 0xfb, 0x2b, 0xfe, 0xfd, 0xea, 0xef, 0xfb, 0x6f, 0xc0, 0x17,
	0x31, 0x21, 0xfa, 0x9f, 0xe0, 0xe6, 0xce, 0x13, 0x27, 0xe0, 0xe8, 0x4a, 0x1e, 0xb1, 0xbe, 0xfe,
	0x95, 0x43, 0xfd, 0xde, 0x30, 0x4a, 0x26, 0xc6, 0xb7, 0x47, 0xed, 0x23, 0x74, 0xd2, 0x77, 0xe4,
	0xaf, 0x23, 0x3f, 0x6c, 0x6a, 0xd1, 0xa8, 0xa9, 0x74, 0x6e, 0xfe, 0x2b, 0x00, 0x00, 0xff, 0xff,
	0xec, 0x30, 0x0f, 0x08, 0x44, 0x19, 0x00, 0x00,
}
